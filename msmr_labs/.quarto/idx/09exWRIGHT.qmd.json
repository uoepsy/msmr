{"title":"Week 9 Exercises: Path Analysis & Mediation","markdown":{"yaml":{"title":"Week 9 Exercises: Path Analysis & Mediation","params":{"SHOW_SOLS":false,"TOGGLE":true},"editor_options":{"chunk_output_type":"console"}},"headingText":"How does Path Analysis work?","containsRefs":false,"markdown":"\n\n```{r}\n#| label: setup\n#| include: false\nsource('assets/setup.R')\nlibrary(xaringanExtra)\nlibrary(tidyverse)\nlibrary(patchwork)\nxaringanExtra::use_panelset()\nqcounter <- function(){\n  if(!exists(\"qcounter_i\")){\n    qcounter_i <<- 1\n  }else{\n    qcounter_i <<- qcounter_i + 1\n  }\n  qcounter_i\n}\nlibrary(psych)\nlibrary(semPlot)\nlibrary(lavaan)\n```\n\n\n\n::: {.callout-note collapse=\"true\"}\n\nThe logic behind path analysis is to estimate a system of equations that best reproduce the covariance structure that we see in the data. \n\n1. We specify our theoretical model of the world as a system of paths between variables that represent which variables influence which other variables. This is simply a diagramatic way of specifying a set of equations. \n    - A single headed arrow from $X \\rightarrow Y$ indicates that Y \"listens to\" X - if X changes, then Y will change accordingly (but not vice versa)\n    - A double headed arrow between $X \\leftrightarrow Y$ indicates that these two variables are related, not because one causes the other, but because there is some mechanism outside of our model that results in these two variables being associated.\n2. We collect data on the relevant variables and we observe a covariance matrix (i.e. how each variable covaries with every other variable). \n3. We fit our model to the data, and evaluate how well our theoretical model (the estimated values for our path coefficients) can reproduce the observed covariance matrix. \n\n\n:::sticky\n**Terminology**  \n\n- **Exogenous variables** are a bit like what we have been describing with words like \"independent variable\" or \"predictor\". In a path diagram, they have no arrows coming into them from other variables in the system, but have paths *going out* to other variables.  \n- **Endogenous variables** are more like the \"outcome\"/\"dependent\"/\"response\" variables we are used to. They have some arrow coming into them from another variable in the system (and may also - but not necessarily - have paths going out from them).  \n:::\n\n:::\n\n\n\n\n::: {.callout-caution collapse=\"true\"}\n## optional: The fun details!  \n\nFor Path Diagrams that meet a certain set of pre-requisites, we can use a cool technique called \"Path Tracing\" to move between the path estimates and the implied covariances between a set of variables. The process is much easier with correlations, so in the examples below everything is standardised to have a variance of 1, meaning that covariance == correlation.  \n\nFor us to be able to do this, a Path Diagram must meet these criteria:\n\n- The model has no two-way causal relations or feedback loops (e.g. $A \\rightarrow B \\rightarrow C \\rightarrow A$ ).  \n- All relations are linear and additive.  \n- 'causes' are unitary (if A -> B and A -> C, then it is presumed that this is the same aspect of A resulting in a change in both B and C, and not two distinct aspects of A, which would be better represented by two correlated variables A1 and A2).  \n- The variables are measured without error (we will relax this assumption later on by including latent variables).\n- Endogenous variables are not connected by correlations (we would correlate the residuals instead, because residuals are not endogenous).  \n- The residuals (error terms) are uncorrelated with exogenous variables.  \n- All our exogenous variables are correlated (unless we specifically assume that their correlation is zero).  \n\n::: {.callout-caution collapse=\"true\"}\n#### causality?\n\nPath models allow us to reason about 'cause and effect', without having to conduct an experiment and manipulate a given variable. However, there is nothing special about the statistical machinery or techniques here that makes our results 'causal'. The extent to which we can claim 'causation' is entirely model-dependent. That is, the use of 'causal' refers to an assumption that our model includes all relevant causal relations (and captures them appropriately). When we test these models, a good fitting model does **not** prove that the causal assumptions are correct.  \n\n:::\n\n\n__Path Tracing Rules__  \n\nThanks to [Sewal Wright](https://www.jstor.org/stable/pdf/2527551.pdf?casa_token=3QF0ad2ZoBcAAAAA:MbEkDNNdoLZr1SXE4LrnK--qrhhsTXLgsRtcWre1UvWxiQiGNUl5vWytGp34XIxhAYMZJe-MbIcBnEwXSfX6MAONevz04-sMXpEDI3IaYKk6mMX46QvX), we can express the correlation between any two variables in the system as the sum of all *compound paths* between the two variables^[if we were wanting covariances, and we didn't have standardised variables, then these would have to be multiplied by the corresponding variance estimates for the variables].  \n\n*compound paths* are the products of any paths you can trace between A and B for which there are: \n\n- no loops\n- no going forward then backward (and no going forward then across a curved arrow)\n- maximum of one curved arrow per path\n\n::::panelset\n:::panel\n#### Example 1\n\nLet's consider the example below, for which the paths are all labelled with lower case letters $a, b, c, \\text{and } d$. In this case, we have two exogenous variables X1 and X2 that both influence a single outcome Y. This is actually just a multiple regression expressed as a path diagram!  \n\n```{r}\n#| label: fig-patheq1\n#| fig.cap: \"A multiple regression model as a path diagram\"\n#| echo: false\nknitr::include_graphics(\"images/patheq1.png\")\n```\n\nAccording to Wright's tracing rules above, we can write out the equations corresponding to the 3 correlations between our observed variables (remember that $r_{a,b} = r_{b,a}$, so it doesn't matter at which variable we start the paths). \n\nThere is only one way to move between X1 and X2, according to Wright's rules, and that is to go via the double headed arrow $c$. There are two ways to go from X1 to Y - we can go across the double headed arrow to X2, and then go from X2 to y (path $bc$), or we can go directly from X1 to Y (path $a$). To get from X2 to Y, we can go either via X1 (path $ac$), or go directly (path $b$).  \n\n| covariance    | paths  |\n| ------------- | ------ |\n| $r_{x1,x2}$ | c      |\n| $r_{x1,y}$  | a + bc |\n| $r_{x2,y}$  | b + ac |\n\nSuppose that we fit this model to some data using something like our good friend maximum likelihood estimation, and we get some estimates for our path coefficients such as those below:  \n\n```{r}\n#| code-fold: true\nlibrary(tidyverse)\nlibrary(lavaan)\n# our data:\negdata <- read_csv(\"../../data/path_eg1.csv\")\n# our model formula\nmod.formula <- \"y ~ x1 + x2\"\n# fitted to some data\nmod.est <- sem(mod.formula, data = egdata)\n# extract parameters:\nparTable(mod.est) |> select(lhs,op,rhs,est)\n```\n\nWith this set of path estimates ($a = 0.61$, $b = 0.38$, and $c = 0.36$), we can calculate the correlation that is *implied* by our estimated model:  \n\n| covariance   | paths  | model implied correlation           |\n| ------------- | ------ | ---------------------------------- |\n| $r_{x1,x2}$ | c      | $0.36$                             |\n| $r_{x1,y}$  | a + bc | $0.61 + (0.38 \\times 0.36) = 0.75$ |\n| $r_{x2,y}$  | b + ac | $0.38 + (0.61 \\times 0.36) = 0.60$ |\n\nWe can then examine how far off this is from the observed covariance matrix. In this specific case, our covariance matrix has 6 values in it, and we are estimating 6 things (see the parameters above). This means that there is unique solution, and our model is **just-identified** (or \"saturated\"), and is capable of **perfectly** reproducing the covariance matrix.  \n```{r}\ncov(egdata) |> round(2)\n```\n\n\n::: {.callout-tip collapse=\"true\"}\n#### why 6? the model in full  \n\nThe variances of individual variables (also covariances of each variable with itself) are also in our covariance matrix on the diagonals, and in full, our model also includes the estimation of variances of exogenous variables, as well as the residual variance of endogenous variables. These can be represented as the paths $d$, $e$ and $f$ in @fig-patheq1a.  \n\n| covariance    | paths  |\n| ------------- | ------ |\n| $r_{x1,x2}$ | c      |\n| $r_{x1,y}$  | a + bc |\n| $r_{x2,y}$  | b + ac |\n| $r_{x1,x1}$  | e |\n| $r_{x2,x2}$  | f |\n| $r_{y,y}$  | d + a$^2$ + b$^2$ + acb + bca  |\n\n```{r}\n#| label: fig-patheq1a\n#| fig.cap: \"A multiple regression model as a path diagram with variances of exogenous variables and residuals indicated\"\n#| echo: false\nknitr::include_graphics(\"images/patheq1a.png\")\n```\n\n:::\n\n\n\n:::\n:::panel\n#### Example 2\n\n```{r}\n#| eval: false\n#| echo: false\nmm = \"\ny1 ~ .4*m + .3*x\ny2 ~ .2*m\nm ~ .6*x\n\"\ndf = simulateData(mm,sample.nobs = 500)\ndf = as.data.frame(apply(df,2,scale))\n# round(cor(df),2)\n# write_csv(df, \"../../data/path_eg2.csv\")\n```\n\n\n\nOne benefit of a path model over a regression model is that we can include multiple endogenous variables. In @fig-patheq2, we can see now a model in which we have two outcomes (Y1 and Y2), an exogenous predictor X, and a variable M that sits on the path between X and the two outcomes. In this case, M is itself an outcome of Z. \n\n```{r}\n#| label: fig-patheq2\n#| fig.cap: \"A model with 2 outcomes\"\n#| echo: false\nknitr::include_graphics(\"images/patheq2.png\")\n```\n\nUsing the path tracing rules, there is only one way to get between X and M, and that is the path $a$. There is only one way to get between M and Y1 (path $b$), and only one way to get between M and Y2 (path $c$). To get between X and Y1, we can only go via $ab$, and to get between X and Y2, we can only go via $ac$. To get between Y1 and Y2, we can go backwards to M and then forwards to Y2, the path $bc$.   \n\n| covariance   | paths |\n| ------------ | ----- |\n| $r_{x,m}$  | a     |\n| $r_{m,y1}$ | b     |\n| $r_{m,y2}$ | c     |\n| $r_{x,y1}$ | ab    |\n| $r_{x,y2}$ | ac    |\n| $r_{y1,y2}$ | bc    |\n\nAs with the previous example, we fit our model to some sample data, and get some estimates for the parameters:  \n\n```{r}\n#| code-fold: true\n# our data:\negdata2 <- read_csv(\"../../data/path_eg2.csv\")\n# our model formula\nmod.formula <- \"\ny1 ~ m\ny2 ~ m\nm ~ x\n# by default, lavaan will correlate the residual variance\n# for the purposes of this example, to match our model exactly, \n# we'll constrain it to 0:  \ny1~~0*y2\n\"\n# fitted to some data\nmod.est <- sem(mod.formula, data = egdata2)\n# extract parameters:\nparTable(mod.est) |> select(lhs,op,rhs,est)\n```\n\nAnd the estimated path coefficients of $a = 0.46$, $b = 0.52$ and $c = 0.19$, imply that our covariances are:  \n\n| covariance   | paths | model implied covariance  |\n| ------------ | ----- | ------------------------- |\n| $r_{x,m}$  | a     | $0.46$                    |\n| $r_{m,y1}$ | b     | $0.52$                    |\n| $r_{m,y2}$ | c     | $0.19$                    |\n| $r_{x,y1}$ | ab    | $0.46 \\times 0.52 = 0.24$ |\n| $r_{x,y2}$ | ac    | $0.46 \\times 0.19 = 0.09$ |\n| $r_{y1,y2}$ | bc    | $0.52 \\times 0.19 = 0.10$ |\n\nFinally, our **observed** covariances are here:  \n```{r}\ncov(egdata2) |> round(2)\n```\n\nBut wait.. unlike the first example, this one does _not_ perfectly reproduce our the covariances we observe. This is because our model is **over-identified**. We are trying to recreate our covariance matrix with 10 values in it using only **7** unknown parameters. This is a good thing! It means we can assess the fit of the model to the data, and evaluate the plausibility of the proposed relationships!  \n\nNotably, some of our \"model implied covariances\" are quite different to those in our observed covariance matrix (e.g, the model implies that $r_{x,y1} = 0.24$, but we actually observe it to be 0.49!).  \n\n:::\n:::panel\n#### Example 3\n\nIn Example 2, our theoretical model proposed that *all* of the association that we might observe between X and Y1 is due to the relationship that X has with M, and that M in turn has with Y1.  However, an alternative model (see @fig-patheq3) could propose that X still directly influences Y1 beyond the influence it exerts via M. We would indicate this via an additional path (path $g$ in @fig-patheq3).  \n\n```{r}\n#| label: fig-patheq3\n#| fig.cap: \"X now directly influences Y, as well as its influence via M\"\n#| echo: false\nknitr::include_graphics(\"images/patheq3.png\")\n```\n\nFitting this model (to the same data), we get out estimates for the paths (including this additional parameter): \n\n```{r}\n#| code-fold: true\n# our model formula\nmod.formula <- \"\ny1 ~ m + x\ny2 ~ m\nm ~ x\n# by default, lavaan will correlate the residual variance\n# for the purposes of this example, to match our model exactly, \n# we'll constrain it to 0:  \ny1~~0*y2\n\"\n# fitted to the same data as for example 2\nmod.est <- sem(mod.formula, data = egdata2)\n# extract parameters:\nparTable(mod.est) |> select(lhs,op,rhs,est)\n```\n\nOur covariances between variables are, in this model, expressed as: \n\n| covariance   | paths | model implied covariance |\n| ------------ | ----- | ------ |\n| $r_{x,m}$  | a     |  $0.46$  |\n| $r_{m,y1}$ | b + ag | $0.38 + (0.46 \\times 0.31) = 0.52$ |\n| $r_{m,y2}$ | c   |   $0.19$   |\n| $r_{x,y1}$ | ab + g | $(0.46 \\times 0.38) + 0.31 = 0.49$ |\n| $r_{x,y2}$ | ac    |  $0.46 \\times 0.19 = 0.09$  |\n| $r_{y1,y2}$ | bc + gac | $(0.38 \\times 0.19) + (0.31 \\times 0.46 \\times 0.19) = 0.10$  |\n\nAnd now, when we look at our observed covariance matrix, we are doing a much better job of recreating it, than we did with the model from Example 2!  \n```{r}\ncov(egdata2) |> round(2)\n```\n\n:::\n::::\n\n:::\n\n# Toy Example: Education and Salary\n\n\n:::frame\n\n```{r}\nlibrary(lavaan)\nset.seed(777)\ndf = tibble::tibble(\n  Educ = round(rnorm(390, 15.5, 3)),\n  Skill = scale(.6*scale(Educ) + rnorm(390))[,1],\n  Salary = scale(.12*scale(Educ) + .3*Skill + rnorm(390))[,1]*12.3 + 39.533\n)\n\nm=\"\nSalary ~ c*Educ + b*Skill\nSkill ~ a*Educ\nind:=a*b\ntotal:=a*b+c\n\"\nsem(m, df) |> summary()\n#lm(Salary ~ Educ + Skill,df) |> summary()\n  \n\n```\n\n\n\n\n:::\n\n\n`r qbegin(qcounter())`\nread in the dataset.  \nsuppose that the only statistical machinery available is the good old regression models with `lm()`. What is the estimated effect of education on salary?  \n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n\n```{r}\nedskill <- df\nm1 <- lm(Salary ~ Educ, data = edskill)\nm2 <- lm(Salary ~ Skill + Educ, data = edskill)\nsjPlot::tab_model(m1,m2)\n```\n\n\nexample of why _some_ variables we do not want to simply 'control' for. In this example, controlling for skill actually _removes_ part of the effect of education on salary!  \n\n`r solend()`\n\n\n`r qbegin(qcounter())`\nInstead, let's suppose we are actually interested in the mechanism of how education influences salary. do more educated people tend to have higher salaries *entirely* because of the skills obtained during their education?  \n\n\n\n::: {.callout-note collapse=\"true\"}\n#### Direct, Indirect and Total effects\n\nIn path diagrams:\n\n- Direct effect = one single-headed arrow between the two variables concerned  \n- Indirect effect = An effect transmitted via some other variables   \n\nIf we have a variable $X$ that we take to 'cause' variable $Y$, then our path diagram will look like so:\n```{r echo=FALSE}\nknitr::include_graphics(\"images/MED1.png\")\n```\nIn this diagram, path $c$ is the __total effect__. This is the _unmediated_ effect of $X$ on $Y$.  \n  \nHowever, while the effect of $X$ on $Y$ could in part be explained by the process of being mediated by some variable $M$, the variable $X$ could still affect $Y$ directly.  \nOur mediating model is shown below:\n\n```{r echo=FALSE}\nknitr::include_graphics(\"images/MED2.png\")\n```\n\nIn this case, path $c'$ is the __direct effect__, and paths $a$ and $b$ make up the __indirect effect__.  \n\nYou will find in some areas people talk about the ideas of __\"complete\"__ vs __\"partial\"__ mediation.\n\n- __Complete mediation__ is when $X$ does not influence $Y$ other than its influence through $M$ (therefore path $c'$ would not be significantly different from zero). \n- __Partial mediation__ is when the path from $X$ to $Y$ is _reduced in magnitude_ when the mediator $M$ is introduced, _but still different from zero._  \n- The __Proportion Mediated__ is the amount of the total effect of $X$ to $Y$ that goes via $M$. i.e. $\\frac{a \\times b}{c}$ in the images above. \n\n:::\n\n\nfit a path model in which education has an effect on salary both directly and indirectly, via its influence on the skills obtained.  \n\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n\n```{r}\nmod1 <- \"\nSalary ~ Educ + Skill\nSkill ~ Educ\n\"\n\nmod1.est <- sem(mod1, data = edskill)\nsummary(mod1.est)\n```\n\n`r solend()`\n\n`r qbegin(qcounter())`\nWhile the model in the previous question better reflects our theoretical notions of how these variables are actually related, we are yet to get an estimate of the indirect effect. \n\n\n::: {.callout-note collapse=\"true\"}\n#### Defined Parameters in lavaan\n\nTo specifically test the indirect effect, we need to explicitly **define** the indirect effect in our model, by first creating a label for each of its sub-component paths, and then defining the indirect effect itself as the product of these two paths (why the product? [Click here for a lovely explanation from Aja](https://uoepsy.github.io/msmr/indirect_effects.pdf)).  \n\nTo do this, we use a new operator, `:=`. \n\n_\"This operator 'defines' new parameters which take on values that are an arbitrary function of the original model parameters. The function, however, must be specified in terms of the parameter labels that are explicitly mentioned in the model syntax.\"_^([the lavaan project](https://lavaan.ugent.be/))] The labels are entirely up to us, we can use \"a\", \"b\" and \"c\", or \"dougal\", \"dylan\" and \"ermintrude\", they're just labels!  \n\n```{r}\n#| eval: false\nmed_model <- \" \n    Y ~ b*M + c*X\n    M ~ a*X\n    \n    indirect := a*b\n    total := a*b + c\n\"\n```\n\n:::\n\nEdit your model formula to also estimate the total and indirect effects, and re-fit the model.  \n\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n\n```{r}\nmod1 <- \"\nSalary ~ c*Educ + b*Skill\nSkill ~ a*Educ\n\nindirect := a*b\ntotal := a*b + c\n\"\n\nmod1.est <- sem(mod1, data = edskill)\nsummary(mod1.est)\n```\n\n\n`r solend()`\n\n\n\n\n\n\nNo X-M Interaction:  The effect of M on Y or b does not vary across levels of X.\nCausal Direction:  The variable M causes Y, by Y does not cause M.\nPerfect Reliability in M:  The reliability of M is perfect.  \nNo Confounding: There is no variable that causes M and Y.\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.callout-note collapse=\"true\"}\n#### Why Bootstrap?  \n\nWe are computing our indirect effect as the _product_ of the sub-component paths. However, this results in the estimated indirect effect rarely following a normal distribution, and makes our usual analytically derived standard errors & p-values inappropriate.   \n\nInstead, bootstrapping has become the norm for assessing sampling distributions of indirect effects in mediation models (remember, bootstrapping involves resampling the data with replacement, thousands of times, in order to empirically generate a sampling distribution).  \n\nWe can do this easily in lavaan:\n\n```{r}\n#| eval: false\nmod.est <- sem(model_formula, data=my_data, se = \"bootstrap\") \n# to print out the confidence intervals:\nsummary(mod.est, ci = TRUE)\n```\n\n:::\n\n\n\n\n\n\n\n","srcMarkdownNoYaml":"\n\n```{r}\n#| label: setup\n#| include: false\nsource('assets/setup.R')\nlibrary(xaringanExtra)\nlibrary(tidyverse)\nlibrary(patchwork)\nxaringanExtra::use_panelset()\nqcounter <- function(){\n  if(!exists(\"qcounter_i\")){\n    qcounter_i <<- 1\n  }else{\n    qcounter_i <<- qcounter_i + 1\n  }\n  qcounter_i\n}\nlibrary(psych)\nlibrary(semPlot)\nlibrary(lavaan)\n```\n\n\n\n::: {.callout-note collapse=\"true\"}\n## How does Path Analysis work?  \n\nThe logic behind path analysis is to estimate a system of equations that best reproduce the covariance structure that we see in the data. \n\n1. We specify our theoretical model of the world as a system of paths between variables that represent which variables influence which other variables. This is simply a diagramatic way of specifying a set of equations. \n    - A single headed arrow from $X \\rightarrow Y$ indicates that Y \"listens to\" X - if X changes, then Y will change accordingly (but not vice versa)\n    - A double headed arrow between $X \\leftrightarrow Y$ indicates that these two variables are related, not because one causes the other, but because there is some mechanism outside of our model that results in these two variables being associated.\n2. We collect data on the relevant variables and we observe a covariance matrix (i.e. how each variable covaries with every other variable). \n3. We fit our model to the data, and evaluate how well our theoretical model (the estimated values for our path coefficients) can reproduce the observed covariance matrix. \n\n\n:::sticky\n**Terminology**  \n\n- **Exogenous variables** are a bit like what we have been describing with words like \"independent variable\" or \"predictor\". In a path diagram, they have no arrows coming into them from other variables in the system, but have paths *going out* to other variables.  \n- **Endogenous variables** are more like the \"outcome\"/\"dependent\"/\"response\" variables we are used to. They have some arrow coming into them from another variable in the system (and may also - but not necessarily - have paths going out from them).  \n:::\n\n:::\n\n\n\n\n::: {.callout-caution collapse=\"true\"}\n## optional: The fun details!  \n\nFor Path Diagrams that meet a certain set of pre-requisites, we can use a cool technique called \"Path Tracing\" to move between the path estimates and the implied covariances between a set of variables. The process is much easier with correlations, so in the examples below everything is standardised to have a variance of 1, meaning that covariance == correlation.  \n\nFor us to be able to do this, a Path Diagram must meet these criteria:\n\n- The model has no two-way causal relations or feedback loops (e.g. $A \\rightarrow B \\rightarrow C \\rightarrow A$ ).  \n- All relations are linear and additive.  \n- 'causes' are unitary (if A -> B and A -> C, then it is presumed that this is the same aspect of A resulting in a change in both B and C, and not two distinct aspects of A, which would be better represented by two correlated variables A1 and A2).  \n- The variables are measured without error (we will relax this assumption later on by including latent variables).\n- Endogenous variables are not connected by correlations (we would correlate the residuals instead, because residuals are not endogenous).  \n- The residuals (error terms) are uncorrelated with exogenous variables.  \n- All our exogenous variables are correlated (unless we specifically assume that their correlation is zero).  \n\n::: {.callout-caution collapse=\"true\"}\n#### causality?\n\nPath models allow us to reason about 'cause and effect', without having to conduct an experiment and manipulate a given variable. However, there is nothing special about the statistical machinery or techniques here that makes our results 'causal'. The extent to which we can claim 'causation' is entirely model-dependent. That is, the use of 'causal' refers to an assumption that our model includes all relevant causal relations (and captures them appropriately). When we test these models, a good fitting model does **not** prove that the causal assumptions are correct.  \n\n:::\n\n\n__Path Tracing Rules__  \n\nThanks to [Sewal Wright](https://www.jstor.org/stable/pdf/2527551.pdf?casa_token=3QF0ad2ZoBcAAAAA:MbEkDNNdoLZr1SXE4LrnK--qrhhsTXLgsRtcWre1UvWxiQiGNUl5vWytGp34XIxhAYMZJe-MbIcBnEwXSfX6MAONevz04-sMXpEDI3IaYKk6mMX46QvX), we can express the correlation between any two variables in the system as the sum of all *compound paths* between the two variables^[if we were wanting covariances, and we didn't have standardised variables, then these would have to be multiplied by the corresponding variance estimates for the variables].  \n\n*compound paths* are the products of any paths you can trace between A and B for which there are: \n\n- no loops\n- no going forward then backward (and no going forward then across a curved arrow)\n- maximum of one curved arrow per path\n\n::::panelset\n:::panel\n#### Example 1\n\nLet's consider the example below, for which the paths are all labelled with lower case letters $a, b, c, \\text{and } d$. In this case, we have two exogenous variables X1 and X2 that both influence a single outcome Y. This is actually just a multiple regression expressed as a path diagram!  \n\n```{r}\n#| label: fig-patheq1\n#| fig.cap: \"A multiple regression model as a path diagram\"\n#| echo: false\nknitr::include_graphics(\"images/patheq1.png\")\n```\n\nAccording to Wright's tracing rules above, we can write out the equations corresponding to the 3 correlations between our observed variables (remember that $r_{a,b} = r_{b,a}$, so it doesn't matter at which variable we start the paths). \n\nThere is only one way to move between X1 and X2, according to Wright's rules, and that is to go via the double headed arrow $c$. There are two ways to go from X1 to Y - we can go across the double headed arrow to X2, and then go from X2 to y (path $bc$), or we can go directly from X1 to Y (path $a$). To get from X2 to Y, we can go either via X1 (path $ac$), or go directly (path $b$).  \n\n| covariance    | paths  |\n| ------------- | ------ |\n| $r_{x1,x2}$ | c      |\n| $r_{x1,y}$  | a + bc |\n| $r_{x2,y}$  | b + ac |\n\nSuppose that we fit this model to some data using something like our good friend maximum likelihood estimation, and we get some estimates for our path coefficients such as those below:  \n\n```{r}\n#| code-fold: true\nlibrary(tidyverse)\nlibrary(lavaan)\n# our data:\negdata <- read_csv(\"../../data/path_eg1.csv\")\n# our model formula\nmod.formula <- \"y ~ x1 + x2\"\n# fitted to some data\nmod.est <- sem(mod.formula, data = egdata)\n# extract parameters:\nparTable(mod.est) |> select(lhs,op,rhs,est)\n```\n\nWith this set of path estimates ($a = 0.61$, $b = 0.38$, and $c = 0.36$), we can calculate the correlation that is *implied* by our estimated model:  \n\n| covariance   | paths  | model implied correlation           |\n| ------------- | ------ | ---------------------------------- |\n| $r_{x1,x2}$ | c      | $0.36$                             |\n| $r_{x1,y}$  | a + bc | $0.61 + (0.38 \\times 0.36) = 0.75$ |\n| $r_{x2,y}$  | b + ac | $0.38 + (0.61 \\times 0.36) = 0.60$ |\n\nWe can then examine how far off this is from the observed covariance matrix. In this specific case, our covariance matrix has 6 values in it, and we are estimating 6 things (see the parameters above). This means that there is unique solution, and our model is **just-identified** (or \"saturated\"), and is capable of **perfectly** reproducing the covariance matrix.  \n```{r}\ncov(egdata) |> round(2)\n```\n\n\n::: {.callout-tip collapse=\"true\"}\n#### why 6? the model in full  \n\nThe variances of individual variables (also covariances of each variable with itself) are also in our covariance matrix on the diagonals, and in full, our model also includes the estimation of variances of exogenous variables, as well as the residual variance of endogenous variables. These can be represented as the paths $d$, $e$ and $f$ in @fig-patheq1a.  \n\n| covariance    | paths  |\n| ------------- | ------ |\n| $r_{x1,x2}$ | c      |\n| $r_{x1,y}$  | a + bc |\n| $r_{x2,y}$  | b + ac |\n| $r_{x1,x1}$  | e |\n| $r_{x2,x2}$  | f |\n| $r_{y,y}$  | d + a$^2$ + b$^2$ + acb + bca  |\n\n```{r}\n#| label: fig-patheq1a\n#| fig.cap: \"A multiple regression model as a path diagram with variances of exogenous variables and residuals indicated\"\n#| echo: false\nknitr::include_graphics(\"images/patheq1a.png\")\n```\n\n:::\n\n\n\n:::\n:::panel\n#### Example 2\n\n```{r}\n#| eval: false\n#| echo: false\nmm = \"\ny1 ~ .4*m + .3*x\ny2 ~ .2*m\nm ~ .6*x\n\"\ndf = simulateData(mm,sample.nobs = 500)\ndf = as.data.frame(apply(df,2,scale))\n# round(cor(df),2)\n# write_csv(df, \"../../data/path_eg2.csv\")\n```\n\n\n\nOne benefit of a path model over a regression model is that we can include multiple endogenous variables. In @fig-patheq2, we can see now a model in which we have two outcomes (Y1 and Y2), an exogenous predictor X, and a variable M that sits on the path between X and the two outcomes. In this case, M is itself an outcome of Z. \n\n```{r}\n#| label: fig-patheq2\n#| fig.cap: \"A model with 2 outcomes\"\n#| echo: false\nknitr::include_graphics(\"images/patheq2.png\")\n```\n\nUsing the path tracing rules, there is only one way to get between X and M, and that is the path $a$. There is only one way to get between M and Y1 (path $b$), and only one way to get between M and Y2 (path $c$). To get between X and Y1, we can only go via $ab$, and to get between X and Y2, we can only go via $ac$. To get between Y1 and Y2, we can go backwards to M and then forwards to Y2, the path $bc$.   \n\n| covariance   | paths |\n| ------------ | ----- |\n| $r_{x,m}$  | a     |\n| $r_{m,y1}$ | b     |\n| $r_{m,y2}$ | c     |\n| $r_{x,y1}$ | ab    |\n| $r_{x,y2}$ | ac    |\n| $r_{y1,y2}$ | bc    |\n\nAs with the previous example, we fit our model to some sample data, and get some estimates for the parameters:  \n\n```{r}\n#| code-fold: true\n# our data:\negdata2 <- read_csv(\"../../data/path_eg2.csv\")\n# our model formula\nmod.formula <- \"\ny1 ~ m\ny2 ~ m\nm ~ x\n# by default, lavaan will correlate the residual variance\n# for the purposes of this example, to match our model exactly, \n# we'll constrain it to 0:  \ny1~~0*y2\n\"\n# fitted to some data\nmod.est <- sem(mod.formula, data = egdata2)\n# extract parameters:\nparTable(mod.est) |> select(lhs,op,rhs,est)\n```\n\nAnd the estimated path coefficients of $a = 0.46$, $b = 0.52$ and $c = 0.19$, imply that our covariances are:  \n\n| covariance   | paths | model implied covariance  |\n| ------------ | ----- | ------------------------- |\n| $r_{x,m}$  | a     | $0.46$                    |\n| $r_{m,y1}$ | b     | $0.52$                    |\n| $r_{m,y2}$ | c     | $0.19$                    |\n| $r_{x,y1}$ | ab    | $0.46 \\times 0.52 = 0.24$ |\n| $r_{x,y2}$ | ac    | $0.46 \\times 0.19 = 0.09$ |\n| $r_{y1,y2}$ | bc    | $0.52 \\times 0.19 = 0.10$ |\n\nFinally, our **observed** covariances are here:  \n```{r}\ncov(egdata2) |> round(2)\n```\n\nBut wait.. unlike the first example, this one does _not_ perfectly reproduce our the covariances we observe. This is because our model is **over-identified**. We are trying to recreate our covariance matrix with 10 values in it using only **7** unknown parameters. This is a good thing! It means we can assess the fit of the model to the data, and evaluate the plausibility of the proposed relationships!  \n\nNotably, some of our \"model implied covariances\" are quite different to those in our observed covariance matrix (e.g, the model implies that $r_{x,y1} = 0.24$, but we actually observe it to be 0.49!).  \n\n:::\n:::panel\n#### Example 3\n\nIn Example 2, our theoretical model proposed that *all* of the association that we might observe between X and Y1 is due to the relationship that X has with M, and that M in turn has with Y1.  However, an alternative model (see @fig-patheq3) could propose that X still directly influences Y1 beyond the influence it exerts via M. We would indicate this via an additional path (path $g$ in @fig-patheq3).  \n\n```{r}\n#| label: fig-patheq3\n#| fig.cap: \"X now directly influences Y, as well as its influence via M\"\n#| echo: false\nknitr::include_graphics(\"images/patheq3.png\")\n```\n\nFitting this model (to the same data), we get out estimates for the paths (including this additional parameter): \n\n```{r}\n#| code-fold: true\n# our model formula\nmod.formula <- \"\ny1 ~ m + x\ny2 ~ m\nm ~ x\n# by default, lavaan will correlate the residual variance\n# for the purposes of this example, to match our model exactly, \n# we'll constrain it to 0:  \ny1~~0*y2\n\"\n# fitted to the same data as for example 2\nmod.est <- sem(mod.formula, data = egdata2)\n# extract parameters:\nparTable(mod.est) |> select(lhs,op,rhs,est)\n```\n\nOur covariances between variables are, in this model, expressed as: \n\n| covariance   | paths | model implied covariance |\n| ------------ | ----- | ------ |\n| $r_{x,m}$  | a     |  $0.46$  |\n| $r_{m,y1}$ | b + ag | $0.38 + (0.46 \\times 0.31) = 0.52$ |\n| $r_{m,y2}$ | c   |   $0.19$   |\n| $r_{x,y1}$ | ab + g | $(0.46 \\times 0.38) + 0.31 = 0.49$ |\n| $r_{x,y2}$ | ac    |  $0.46 \\times 0.19 = 0.09$  |\n| $r_{y1,y2}$ | bc + gac | $(0.38 \\times 0.19) + (0.31 \\times 0.46 \\times 0.19) = 0.10$  |\n\nAnd now, when we look at our observed covariance matrix, we are doing a much better job of recreating it, than we did with the model from Example 2!  \n```{r}\ncov(egdata2) |> round(2)\n```\n\n:::\n::::\n\n:::\n\n# Toy Example: Education and Salary\n\n\n:::frame\n\n```{r}\nlibrary(lavaan)\nset.seed(777)\ndf = tibble::tibble(\n  Educ = round(rnorm(390, 15.5, 3)),\n  Skill = scale(.6*scale(Educ) + rnorm(390))[,1],\n  Salary = scale(.12*scale(Educ) + .3*Skill + rnorm(390))[,1]*12.3 + 39.533\n)\n\nm=\"\nSalary ~ c*Educ + b*Skill\nSkill ~ a*Educ\nind:=a*b\ntotal:=a*b+c\n\"\nsem(m, df) |> summary()\n#lm(Salary ~ Educ + Skill,df) |> summary()\n  \n\n```\n\n\n\n\n:::\n\n\n`r qbegin(qcounter())`\nread in the dataset.  \nsuppose that the only statistical machinery available is the good old regression models with `lm()`. What is the estimated effect of education on salary?  \n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n\n```{r}\nedskill <- df\nm1 <- lm(Salary ~ Educ, data = edskill)\nm2 <- lm(Salary ~ Skill + Educ, data = edskill)\nsjPlot::tab_model(m1,m2)\n```\n\n\nexample of why _some_ variables we do not want to simply 'control' for. In this example, controlling for skill actually _removes_ part of the effect of education on salary!  \n\n`r solend()`\n\n\n`r qbegin(qcounter())`\nInstead, let's suppose we are actually interested in the mechanism of how education influences salary. do more educated people tend to have higher salaries *entirely* because of the skills obtained during their education?  \n\n\n\n::: {.callout-note collapse=\"true\"}\n#### Direct, Indirect and Total effects\n\nIn path diagrams:\n\n- Direct effect = one single-headed arrow between the two variables concerned  \n- Indirect effect = An effect transmitted via some other variables   \n\nIf we have a variable $X$ that we take to 'cause' variable $Y$, then our path diagram will look like so:\n```{r echo=FALSE}\nknitr::include_graphics(\"images/MED1.png\")\n```\nIn this diagram, path $c$ is the __total effect__. This is the _unmediated_ effect of $X$ on $Y$.  \n  \nHowever, while the effect of $X$ on $Y$ could in part be explained by the process of being mediated by some variable $M$, the variable $X$ could still affect $Y$ directly.  \nOur mediating model is shown below:\n\n```{r echo=FALSE}\nknitr::include_graphics(\"images/MED2.png\")\n```\n\nIn this case, path $c'$ is the __direct effect__, and paths $a$ and $b$ make up the __indirect effect__.  \n\nYou will find in some areas people talk about the ideas of __\"complete\"__ vs __\"partial\"__ mediation.\n\n- __Complete mediation__ is when $X$ does not influence $Y$ other than its influence through $M$ (therefore path $c'$ would not be significantly different from zero). \n- __Partial mediation__ is when the path from $X$ to $Y$ is _reduced in magnitude_ when the mediator $M$ is introduced, _but still different from zero._  \n- The __Proportion Mediated__ is the amount of the total effect of $X$ to $Y$ that goes via $M$. i.e. $\\frac{a \\times b}{c}$ in the images above. \n\n:::\n\n\nfit a path model in which education has an effect on salary both directly and indirectly, via its influence on the skills obtained.  \n\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n\n```{r}\nmod1 <- \"\nSalary ~ Educ + Skill\nSkill ~ Educ\n\"\n\nmod1.est <- sem(mod1, data = edskill)\nsummary(mod1.est)\n```\n\n`r solend()`\n\n`r qbegin(qcounter())`\nWhile the model in the previous question better reflects our theoretical notions of how these variables are actually related, we are yet to get an estimate of the indirect effect. \n\n\n::: {.callout-note collapse=\"true\"}\n#### Defined Parameters in lavaan\n\nTo specifically test the indirect effect, we need to explicitly **define** the indirect effect in our model, by first creating a label for each of its sub-component paths, and then defining the indirect effect itself as the product of these two paths (why the product? [Click here for a lovely explanation from Aja](https://uoepsy.github.io/msmr/indirect_effects.pdf)).  \n\nTo do this, we use a new operator, `:=`. \n\n_\"This operator 'defines' new parameters which take on values that are an arbitrary function of the original model parameters. The function, however, must be specified in terms of the parameter labels that are explicitly mentioned in the model syntax.\"_^([the lavaan project](https://lavaan.ugent.be/))] The labels are entirely up to us, we can use \"a\", \"b\" and \"c\", or \"dougal\", \"dylan\" and \"ermintrude\", they're just labels!  \n\n```{r}\n#| eval: false\nmed_model <- \" \n    Y ~ b*M + c*X\n    M ~ a*X\n    \n    indirect := a*b\n    total := a*b + c\n\"\n```\n\n:::\n\nEdit your model formula to also estimate the total and indirect effects, and re-fit the model.  \n\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n\n```{r}\nmod1 <- \"\nSalary ~ c*Educ + b*Skill\nSkill ~ a*Educ\n\nindirect := a*b\ntotal := a*b + c\n\"\n\nmod1.est <- sem(mod1, data = edskill)\nsummary(mod1.est)\n```\n\n\n`r solend()`\n\n\n\n\n\n\nNo X-M Interaction:  The effect of M on Y or b does not vary across levels of X.\nCausal Direction:  The variable M causes Y, by Y does not cause M.\nPerfect Reliability in M:  The reliability of M is perfect.  \nNo Confounding: There is no variable that causes M and Y.\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.callout-note collapse=\"true\"}\n#### Why Bootstrap?  \n\nWe are computing our indirect effect as the _product_ of the sub-component paths. However, this results in the estimated indirect effect rarely following a normal distribution, and makes our usual analytically derived standard errors & p-values inappropriate.   \n\nInstead, bootstrapping has become the norm for assessing sampling distributions of indirect effects in mediation models (remember, bootstrapping involves resampling the data with replacement, thousands of times, in order to empirically generate a sampling distribution).  \n\nWe can do this easily in lavaan:\n\n```{r}\n#| eval: false\nmod.est <- sem(model_formula, data=my_data, se = \"bootstrap\") \n# to print out the confidence intervals:\nsummary(mod.est, ci = TRUE)\n```\n\n:::\n\n\n\n\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"include-in-header":["assets/toggling.html"],"number-sections":false,"output-file":"09exWRIGHT.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.340","toc_float":true,"link-citations":true,"theme":["united","assets/style-labs.scss"],"title":"Week 9 Exercises: Path Analysis & Mediation","params":{"SHOW_SOLS":false,"TOGGLE":true},"editor_options":{"chunk_output_type":"console"}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}