{
  "hash": "bc06f04574171f2031e06d66331bd930",
  "result": {
    "markdown": "---\ntitle: \"3A: Polynomial Growth\"\nparams: \n    SHOW_SOLS: FALSE\n    TOGGLE: TRUE\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\n:::lo\nThis reading:  \n\n\n:::\n\n\nWe have already seen in the last couple of weeks that we can use MLM to study something 'over the course of X'. In the novel word learning experiment from last week's lab, we investigated the change in the probability of answering correctly over the course of the experimental blocks. \n\nWe've talked about how **\"longitudinal\"** is the term commonly used to refer to any data in which repeated measurements are taken over a continuous domain. This opens up the potential for observations to be unevenly spaced, or missing at certain points. It also, as will be the focus of this week, opens the door to thinking about how many effects of interest are likely to display **non-linear patterns**. These exercises focus on including higher-order polynomials in the multi-level model to capture non-linearity. \n  \n# Linear vs Non-Linear\n\n\n\n\n\n<div style=\"display:inline-block;width:45%;margin:5px;vertical-align:middle\">\nSuppose we had collected the data in Figure \\@ref(fig:mcycle), and we wanted to fit a model to predict $y$ based on the values of $x$.  \n\nLet's use our old friend linear regression, $y = \\beta_0 + \\beta_1(x) + \\varepsilon$.  \n\nWe'll get out some estimated coefficients, some standard errors, and some p-values:  \n\n- The intercept:  \n  $\\beta_0$ = -110.28, SE = 19.54, p < .001  \n- The estimated coefficient of x:  \n  $\\beta_1$ = 2.71, SE = 0.55, p < .001   \n\nJob done? Clearly not - we need only overlay model upon raw data (Figure \\@ref(fig:mcycle3)) to see we are missing some key parts of the pattern.  \n</div>\n<div style=\"display:inline-block;width:45%;margin:5px;vertical-align:middle\">\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![A clearly non-linear pattern](03a_poly_files/figure-html/mcycle-1.png){fig-align='center' width=80%}\n:::\n:::\n\n::: {.cell layout-align=\"center\" fig.asp='0.7'}\n::: {.cell-output-display}\n![Uh-oh... ](03a_poly_files/figure-html/mcycle3-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n</div>  \n\n:::statbox\n**Thoughts about Model + Error**  \n\nAll our work here is in aim of making models of the world.  \n\n1. Models are just models. They are simplifications, and so they don't perfectly fit to the observed world (indeed, how well a model fits to the world is often our metric for comparing models).  \n2. $y - \\widehat{y}$. Our observed data minus our model predicted values (i.e. in linear regression our \"residuals\") reflect everything that we don't account for in our model\n3. In an ideal world, our model accounts for all the systematic relationships, and what is left over (our residuals) is just randomness. If our model is mis-specified, or misses out something systematic, then our residuals will reflect this. \n4. We check for this by examining how much like randomness the residuals appear to be (zero mean, normally distributed, constant variance, i.i.d (\"independent and identically distributed\") - i.e., what gets referred to as the \"assumptions\"). \n5. We will **never** know whether our residuals contain only randomness, because we can never observe *everything*. \n\n<h/>\n\nLet's just do a quick `plot(model)` for some diagnostic plots of my linear model:\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03a_poly_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\nDoes it look like the residuals are independently distributed? Not really. \nWe need to find some way of incorporating the non-linear relationship between y and x into our model. \n\n:::\n\n\n# What is a polynomial?  \n\n:::statbox\nPolynomials are mathematical expressions which involve a sum of powers. For instance:\n\n- $y = 4 + x + x^2$ is a second-order polynomial as the highest power of $x$ that appears is $x^2$  \n- $y = 9x + 2x^2 + 4x^3$ is a third-order polynomial as the highest power of $x$ that appears is $x^3$  \n- $y = x^6$ is a sixth-order polynomial as the highest power of $x$ that appears is $x^6$  \n\n:::\n\nFor our purposes, extending our model to include higher-order terms can fit non-linear relationships between two variables. For instance, fitting models with linear and quadratic terms ($y_i$ = $\\beta_0 + \\beta_1 x_{i} \\ + \\beta_2 x^2_i + \\varepsilon_i$) and extending these to cubic ($y_i$ = $\\beta_0 + \\beta_1 x_{i} \\ + \\beta_2 x^2_i + \\beta_3 x^3_i + \\varepsilon_i$) (or beyond), may aid in modelling nonlinear patterns.\n\n\n::: {.cell layout-align=\"center\" fig.heigth='4'}\n::: {.cell-output-display}\n![](03a_poly_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::statbox\n**What are we interested in here?**  \n\nAs the order of polynomials increases, we tend to be less interested in these terms in our model. Linear change is the easiest to think about: are things going up over the course of $x$, or down? (or neither?). Quadratic change is the next most interesting, and it may help to think of this as the \"rate of change\". For instance, in the plot below, it is the quadratic term which differs between the two groups trajectories. \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03a_poly_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n<div class=\"optional-begin\"><button id='opt-start-1' class=\"jk-circle-right optional-icon clickable\" onclick=\"toggle_visibility('opt-body-1', 'opt-start-1')\"> Positive and negative quadratic terms </button></div><div class=\"optional-body\" id = \"opt-body-1\" style=\"display: none;\">\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03a_poly_files/figure-html/quadfig-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n<!-- \n\n<div class=\"optional-begin\"><button id='opt-start-2' class=\"jk-circle-right optional-icon clickable\" onclick=\"toggle_visibility('opt-body-2', 'opt-start-2')\"> Code to create plot </button></div><div class=\"optional-body\" id = \"opt-body-2\" style=\"display: none;\">\n\n -->\n<!-- ```{r eval=FALSE} -->\n<!-- tibble( -->\n<!--   x = -10:10, -->\n<!--   y = x^2, -->\n<!--   y1 = -x^2 -->\n<!-- ) %>% pivot_longer(y:y1) %>% -->\n<!--   mutate(name = ifelse(name==\"y\",\"quadratic term is positive \\n Y = X^2\", \"quadratic term is negative \\n Y = -X^2\")) %>% -->\n<!--   ggplot(.,aes(x=x,y=value,col=name)) + -->\n<!--   geom_line()+ -->\n<!--   guides(col=FALSE)+ -->\n<!--   facet_wrap(~name, scales=\"free_y\") -->\n<!-- ``` -->\n<!-- \n\n</div><p class=\"optional-end\"></p>\n\n -->\n\n\n\n</div><p class=\"optional-end\"></p>\n\n\n:::\n\n\n\n## Raw Polynomials\n\n<div style=\"display:inline-block; width: 60%; vertical-align: top\">\nThere are two types of polynomial we can construct. \"Raw\" (or \"Natural\") polynomials are the straightforward ones you might be expecting the table to the right to be filled with.  \n\nThese are simply the original values of the x variable to the power of 2, 3 and so on.  \n  \nWe can quickly get these in R using the `poly()` function, with `raw = TRUE`.  \n\nIf you want to create \"raw\" polynomials, make sure to specify `raw = TRUE` or you will not get what you want because the default behaviour is `raw = FALSE`.\n</div>\n<div style=\"display:inline-block; width: 30%;\">\n<center>\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> x </th>\n   <th style=\"text-align:left;\"> x^2 </th>\n   <th style=\"text-align:left;\"> x^3 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 1 </td>\n   <td style=\"text-align:left;\"> ? </td>\n   <td style=\"text-align:left;\"> ? </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2 </td>\n   <td style=\"text-align:left;\"> ? </td>\n   <td style=\"text-align:left;\"> ? </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 3 </td>\n   <td style=\"text-align:left;\"> ? </td>\n   <td style=\"text-align:left;\"> ? </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 4 </td>\n   <td style=\"text-align:left;\"> ? </td>\n   <td style=\"text-align:left;\"> ? </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 5 </td>\n   <td style=\"text-align:left;\"> ? </td>\n   <td style=\"text-align:left;\"> ? </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ... </td>\n   <td style=\"text-align:left;\"> ... </td>\n   <td style=\"text-align:left;\"> ... </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n</center>\n</div>\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npoly(1:10, degree = 3, raw=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       1   2    3\n [1,]  1   1    1\n [2,]  2   4    8\n [3,]  3   9   27\n [4,]  4  16   64\n [5,]  5  25  125\n [6,]  6  36  216\n [7,]  7  49  343\n [8,]  8  64  512\n [9,]  9  81  729\n[10,] 10 100 1000\nattr(,\"degree\")\n[1] 1 2 3\nattr(,\"class\")\n[1] \"poly\"   \"matrix\"\n```\n:::\n:::\n\n\n\n<div style=\"background-color: #eafaff; border-radius: 5px; padding: 20px 20px 10px 20px; margin-top: 20px; margin-bottom: 20px;\">\n**Raw polynomials are correlated**  \n\nWith raw (or \"natural\") polynomials, the terms `poly1`, `poly2` and `poly3` are correlated.  \nThink think about why this might be - by definition, as $x^1$ increases, so will $x^2$, and so will $x^3$ and so on.  \n\nWe can visualise them: \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmatplot(poly(1:10, 3, raw=T), type=\"l\")\n```\n\n::: {.cell-output-display}\n![](03a_poly_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' width=80%}\n:::\n:::\n\nAnd measure the correlation coefficients:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncor(poly(1:10, 3, raw=T)) %>% round(2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     1    2    3\n1 1.00 0.97 0.93\n2 0.97 1.00 0.99\n3 0.93 0.99 1.00\n```\n:::\n:::\n\n\nWhy might this be a problem?  \nWell, this multicollinearity can lead to estimation problems, and means that our parameter estimates may change considerably depending upon what terms we include in our model, and it becomes more difficult to determine which ones are important, and what the effect sizes are.  \nTable \\@ref(tab:rawpolytab) below shows the coefficients for models fitted to a randomly generated dataset, with `poly1`, `poly1+poly2`, and `poly1+poly2+poly3` as predictors (where `poly1`-`poly3` are **natural** polynomials). Notice that they change with the addition of each term.\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>Incremental addition of raw polynomial terms</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> term </th>\n   <th style=\"text-align:left;\"> y~poly1 </th>\n   <th style=\"text-align:left;\"> y~poly1+poly2 </th>\n   <th style=\"text-align:right;\"> y~poly1+poly2+poly3 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> (Intercept) </td>\n   <td style=\"text-align:left;\"> 639.37 </td>\n   <td style=\"text-align:left;\"> -199.68 </td>\n   <td style=\"text-align:right;\"> -0.12 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> poly1 </td>\n   <td style=\"text-align:left;\"> -144.01 </td>\n   <td style=\"text-align:left;\"> 275.52 </td>\n   <td style=\"text-align:right;\"> 98.52 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> poly2 </td>\n   <td style=\"text-align:left;\"> - </td>\n   <td style=\"text-align:left;\"> -38.14 </td>\n   <td style=\"text-align:right;\"> 0.24 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> poly3 </td>\n   <td style=\"text-align:left;\"> - </td>\n   <td style=\"text-align:left;\"> - </td>\n   <td style=\"text-align:right;\"> -2.33 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n</div>\n\n## Orthogonal Polynomials  \n\n\"Orthogonal\" polynomials are uncorrelated (hence the name). \nWe can get these for $x = 1,2,...,9,10$ using the following code:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npoly(1:10, degree = 3, raw = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                1           2          3\n [1,] -0.49543369  0.52223297 -0.4534252\n [2,] -0.38533732  0.17407766  0.1511417\n [3,] -0.27524094 -0.08703883  0.3778543\n [4,] -0.16514456 -0.26111648  0.3346710\n [5,] -0.05504819 -0.34815531  0.1295501\n [6,]  0.05504819 -0.34815531 -0.1295501\n [7,]  0.16514456 -0.26111648 -0.3346710\n [8,]  0.27524094 -0.08703883 -0.3778543\n [9,]  0.38533732  0.17407766 -0.1511417\n[10,]  0.49543369  0.52223297  0.4534252\nattr(,\"coefs\")\nattr(,\"coefs\")$alpha\n[1] 5.5 5.5 5.5\n\nattr(,\"coefs\")$norm2\n[1]    1.0   10.0   82.5  528.0 3088.8\n\nattr(,\"degree\")\n[1] 1 2 3\nattr(,\"class\")\n[1] \"poly\"   \"matrix\"\n```\n:::\n:::\n\nNotice that the first order term has been scaled, so instead of the values 1 to 10, we have values ranging from -0.5 to +0.5, centered on 0. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncolMeans(poly(1:10, degree = 3, raw = FALSE)) %>%\n    round(2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n1 2 3 \n0 0 0 \n```\n:::\n:::\n\n\nAs you can see from the output above, which computes the mean of each column, each predictor has mean 0, so they are mean-centred. __This is a key fact and will affect the interpretation of our predictors later on__.\n\nThink about what this means for $x^2$. It will be uncorrelated with $x$ (because $-0.5^2 = 0.5^2$)!  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmatplot(poly(1:10, 3, raw=F), type=\"l\")\n```\n\n::: {.cell-output-display}\n![](03a_poly_files/figure-html/unnamed-chunk-12-1.png){fig-align='center' width=80%}\n:::\n:::\n\nThe correlations are zero!\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncor(poly(1:10, 3, raw=F)) %>% round(2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  1 2 3\n1 1 0 0\n2 0 1 0\n3 0 0 1\n```\n:::\n:::\n\n\nWe can then fit the same models `y~poly1`, `y~poly1+poly2`, and `y~poly1+poly2+poly3` as predictors (where `poly1`-`poly3` are now **orthogonal** polynomials), and see that estimated coefficients do not change between models: \n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>Incremental addition of orthogonal polynomial terms</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> term </th>\n   <th style=\"text-align:left;\"> y~poly1 </th>\n   <th style=\"text-align:left;\"> y~poly1+poly2 </th>\n   <th style=\"text-align:right;\"> y~poly1+poly2+poly3 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> (Intercept) </td>\n   <td style=\"text-align:left;\"> -152.66 </td>\n   <td style=\"text-align:left;\"> -152.66 </td>\n   <td style=\"text-align:right;\"> -152.66 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> poly1 </td>\n   <td style=\"text-align:left;\"> -1307.99 </td>\n   <td style=\"text-align:left;\"> -1307.99 </td>\n   <td style=\"text-align:right;\"> -1307.99 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> poly2 </td>\n   <td style=\"text-align:left;\"> - </td>\n   <td style=\"text-align:left;\"> -876.36 </td>\n   <td style=\"text-align:right;\"> -876.36 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> poly3 </td>\n   <td style=\"text-align:left;\"> - </td>\n   <td style=\"text-align:left;\"> - </td>\n   <td style=\"text-align:right;\"> -129.26 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n:::statbox\n**Remember what zero is!** \n\nWith orthogonal polynomials, you need to be careful about interpreting coefficients. For raw polynomials the intercept remains the y-intercept (i.e., where the line hits the y-axis). The higher order terms can then be thought of from that starting point - e.g., \"where $x$ is 2, $\\widehat{y}$ is $\\beta_0 + \\beta_1 \\cdot 2 + \\beta_2 \\cdot 2^2 + \\beta_3 \\cdot 2^3 ...$\".  \n<br>\nFor orthogonal polynomials, the interpretation becomes more tricky. The intercept is the overall average of y, the linear predictor is the linear change pivoting around the mean of $x$ (rather than $x = 0$), the quadratic term corresponds to the steepness of the quadratic curvature (\"how curvy is it?\"), the cubic term to the steepness at the inflection points (\"how wiggly is it?\"), and so on. \n\n::: \n\n## Some useful code from Dan\n\n:::rtip\n\nIt's possible to use `poly()` internally in fitting our linear model, if we want:  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlm(y ~ poly(x, 3, raw = T), data = df)\n```\n:::\n\n<br>\nUnfortunately, the coefficients will end up having long messy names `poly(x, 3, raw = T)[1]`, `poly(x, 3, raw = T)[2]` etc.   \n<br>\nIt is probably nicer if we add the polynomials to our data itself. As it happens, Dan has provided a nice little function which attaches these as columns to our data, naming them `poly1`, `poly2`, etc. \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# import Dan's code and make it available in our own R session\n# you must do this in every script you want to use this function\nsource(\"https://uoepsy.github.io/msmr/functions/code_poly.R\")\n\nmydata <- code_poly(df = mydata, predictor = 'time', poly.order = 3, \n                    orthogonal = FALSE, draw.poly = FALSE)\nhead(mydata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 6\n   time     y time.Index poly1 poly2 poly3\n  <int> <dbl>      <dbl> <dbl> <dbl> <dbl>\n1     1  96.8          1     1     1     1\n2     2 179.           2     2     4     8\n3     3 234.           3     3     9    27\n4     4 248.           4     4    16    64\n5     5 209.           5     5    25   125\n6     6  97.2          6     6    36   216\n```\n:::\n:::\n\n\nBoth will produce the same model output (but Dan's method produces these nice neat names for the coefficients!), and we can just put the terms into our model directly as `lm(y ~ poly1 + poly2 + poly3, data = mydata)`.  \n\n\n\n<div class=\"optional-begin\"><button id='opt-start-3' class=\"jk-circle-right optional-icon clickable\" onclick=\"toggle_visibility('opt-body-3', 'opt-start-3')\"> Demonstration </button></div><div class=\"optional-body\" id = \"opt-body-3\" style=\"display: none;\">\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\nOur data:  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nhead(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n      x     y\n  <int> <dbl>\n1     1  102.\n2     2  203.\n3     3  301.\n4     4  397.\n5     5  492.\n6     6  585.\n```\n:::\n:::\n\n\nA messy model:  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nm.messy <- lm(y ~ poly(x, 3, raw=T), data = df)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div id=\"eboleovepq\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#eboleovepq table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#eboleovepq thead, #eboleovepq tbody, #eboleovepq tfoot, #eboleovepq tr, #eboleovepq td, #eboleovepq th {\n  border-style: none;\n}\n\n#eboleovepq p {\n  margin: 0;\n  padding: 0;\n}\n\n#eboleovepq .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#eboleovepq .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#eboleovepq .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#eboleovepq .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#eboleovepq .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#eboleovepq .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#eboleovepq .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#eboleovepq .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#eboleovepq .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#eboleovepq .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#eboleovepq .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#eboleovepq .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#eboleovepq .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#eboleovepq .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#eboleovepq .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#eboleovepq .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#eboleovepq .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#eboleovepq .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#eboleovepq .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#eboleovepq .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#eboleovepq .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#eboleovepq .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#eboleovepq .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#eboleovepq .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#eboleovepq .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#eboleovepq .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#eboleovepq .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#eboleovepq .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#eboleovepq .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#eboleovepq .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#eboleovepq .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#eboleovepq .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#eboleovepq .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#eboleovepq .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#eboleovepq .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#eboleovepq .gt_left {\n  text-align: left;\n}\n\n#eboleovepq .gt_center {\n  text-align: center;\n}\n\n#eboleovepq .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#eboleovepq .gt_font_normal {\n  font-weight: normal;\n}\n\n#eboleovepq .gt_font_bold {\n  font-weight: bold;\n}\n\n#eboleovepq .gt_font_italic {\n  font-style: italic;\n}\n\n#eboleovepq .gt_super {\n  font-size: 65%;\n}\n\n#eboleovepq .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#eboleovepq .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#eboleovepq .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#eboleovepq .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#eboleovepq .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#eboleovepq .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#eboleovepq .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"term\">term</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"estimate\">estimate</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"std.error\">std.error</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"statistic\">statistic</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"p.value\">p.value</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">(Intercept)</td>\n<td headers=\"estimate\" class=\"gt_row gt_right\">2.3692128</td>\n<td headers=\"std.error\" class=\"gt_row gt_right\">2.1699168</td>\n<td headers=\"statistic\" class=\"gt_row gt_right\">1.0918450</td>\n<td headers=\"p.value\" class=\"gt_row gt_right\">3.167922e-01</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">poly(x, 3, raw = T)1</td>\n<td headers=\"estimate\" class=\"gt_row gt_right\">99.7044493</td>\n<td headers=\"std.error\" class=\"gt_row gt_right\">1.6264557</td>\n<td headers=\"statistic\" class=\"gt_row gt_right\">61.3016699</td>\n<td headers=\"p.value\" class=\"gt_row gt_right\">1.266634e-09</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">poly(x, 3, raw = T)2</td>\n<td headers=\"estimate\" class=\"gt_row gt_right\">0.3206471</td>\n<td headers=\"std.error\" class=\"gt_row gt_right\">0.3354827</td>\n<td headers=\"statistic\" class=\"gt_row gt_right\">0.9557785</td>\n<td headers=\"p.value\" class=\"gt_row gt_right\">3.760911e-01</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">poly(x, 3, raw = T)3</td>\n<td headers=\"estimate\" class=\"gt_row gt_right\">-0.1286860</td>\n<td headers=\"std.error\" class=\"gt_row gt_right\">0.0201173</td>\n<td headers=\"statistic\" class=\"gt_row gt_right\">-6.3967859</td>\n<td headers=\"p.value\" class=\"gt_row gt_right\">6.875042e-04</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\nDan's code, and a neat model:  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndf <- code_poly(df = df, predictor = 'x', poly.order = 3, \n                orthogonal = FALSE, draw.poly = FALSE)\nmDan <- lm(y ~ poly1 + poly2 + poly3, data = df)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div id=\"vkpnutapxv\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#vkpnutapxv table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#vkpnutapxv thead, #vkpnutapxv tbody, #vkpnutapxv tfoot, #vkpnutapxv tr, #vkpnutapxv td, #vkpnutapxv th {\n  border-style: none;\n}\n\n#vkpnutapxv p {\n  margin: 0;\n  padding: 0;\n}\n\n#vkpnutapxv .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#vkpnutapxv .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#vkpnutapxv .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#vkpnutapxv .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#vkpnutapxv .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vkpnutapxv .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vkpnutapxv .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vkpnutapxv .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#vkpnutapxv .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#vkpnutapxv .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#vkpnutapxv .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#vkpnutapxv .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#vkpnutapxv .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#vkpnutapxv .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#vkpnutapxv .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#vkpnutapxv .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#vkpnutapxv .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#vkpnutapxv .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#vkpnutapxv .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vkpnutapxv .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#vkpnutapxv .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#vkpnutapxv .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#vkpnutapxv .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vkpnutapxv .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#vkpnutapxv .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#vkpnutapxv .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vkpnutapxv .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vkpnutapxv .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#vkpnutapxv .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vkpnutapxv .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#vkpnutapxv .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vkpnutapxv .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vkpnutapxv .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vkpnutapxv .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vkpnutapxv .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vkpnutapxv .gt_left {\n  text-align: left;\n}\n\n#vkpnutapxv .gt_center {\n  text-align: center;\n}\n\n#vkpnutapxv .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#vkpnutapxv .gt_font_normal {\n  font-weight: normal;\n}\n\n#vkpnutapxv .gt_font_bold {\n  font-weight: bold;\n}\n\n#vkpnutapxv .gt_font_italic {\n  font-style: italic;\n}\n\n#vkpnutapxv .gt_super {\n  font-size: 65%;\n}\n\n#vkpnutapxv .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#vkpnutapxv .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#vkpnutapxv .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#vkpnutapxv .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#vkpnutapxv .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#vkpnutapxv .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#vkpnutapxv .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"term\">term</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"estimate\">estimate</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"std.error\">std.error</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"statistic\">statistic</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"p.value\">p.value</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">(Intercept)</td>\n<td headers=\"estimate\" class=\"gt_row gt_right\">2.3692128</td>\n<td headers=\"std.error\" class=\"gt_row gt_right\">2.1699168</td>\n<td headers=\"statistic\" class=\"gt_row gt_right\">1.0918450</td>\n<td headers=\"p.value\" class=\"gt_row gt_right\">3.167922e-01</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">poly1</td>\n<td headers=\"estimate\" class=\"gt_row gt_right\">99.7044493</td>\n<td headers=\"std.error\" class=\"gt_row gt_right\">1.6264557</td>\n<td headers=\"statistic\" class=\"gt_row gt_right\">61.3016699</td>\n<td headers=\"p.value\" class=\"gt_row gt_right\">1.266634e-09</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">poly2</td>\n<td headers=\"estimate\" class=\"gt_row gt_right\">0.3206471</td>\n<td headers=\"std.error\" class=\"gt_row gt_right\">0.3354827</td>\n<td headers=\"statistic\" class=\"gt_row gt_right\">0.9557785</td>\n<td headers=\"p.value\" class=\"gt_row gt_right\">3.760911e-01</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">poly3</td>\n<td headers=\"estimate\" class=\"gt_row gt_right\">-0.1286860</td>\n<td headers=\"std.error\" class=\"gt_row gt_right\">0.0201173</td>\n<td headers=\"statistic\" class=\"gt_row gt_right\">-6.3967859</td>\n<td headers=\"p.value\" class=\"gt_row gt_right\">6.875042e-04</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n\n\n</div><p class=\"optional-end\"></p>\n\n\n:::\n\n\n\n\n",
    "supporting": [
      "03a_poly_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/panelset-0.2.6/panelset.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/panelset-0.2.6/panelset.js\"></script>\r\n<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\r\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}