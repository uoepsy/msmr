{
  "hash": "9d01876dcf15bf04981ae56ea603bbc3",
  "result": {
    "markdown": "---\ntitle: \"3A: Polynomial Growth\"\nparams: \n    SHOW_SOLS: FALSE\n    TOGGLE: TRUE\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\n:::lo\nThis reading:  \n\n- The basics of modelling non-linear change via polynomial terms. \n- An example with MLM\n\nFor additional reading, [Winter & Wieling, 2016](https://doi.org/10.1093/jole/lzv003) is pretty good (mainly focus on sections 1-3)\n\n:::\n\n\nWe have already seen in the last couple of weeks that we can use MLM to study something 'over the course of X'. This might be \"over the course of adolescence\" (i.e. `y ~ age`), or \"over the course of an experiment\" (`y ~ trial_number`). The term **\"longitudinal\"** is commonly used to refer to any data in which repeated measurements are taken over a continuous domain. This opened up the potential for observations to be unevenly spaced, or missing at certain points. \n\nIt also, as will be the focus of this week, opens the door to thinking about how many effects of interest may display patterns that are **non-linear**. There are lots of techniques to try and summarise non-linear trajectories, and here we are going to focus on the method of including higher-order polynomials as predcitors.  \n  \n# Linear vs Non-Linear\n\nForget about multilevel models for a little while, as we can think about this in the single level world.  \n\nSuppose we had collected the data on 74 children, and measured the number of pathways in their brains (\"synaptic density\"), see @fig-dfeg. We wanted to fit a model to predict synaptic density based on the values of age.  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsyndat <- read_csv(\"https://uoepsy.github.io/data/msmr_synapticdens.csv\")\nggplot(syndat, aes(x=age,y=syndens))+\n  geom_point(size=2)+\n  labs(x=\"Age (years)\",y=\"Synaptic Density\")\n```\n\n::: {.cell-output-display}\n![A clearly non-linear pattern](03a_poly_files/figure-html/fig-dfeg-1.png){#fig-dfeg fig-align='center' width=80%}\n:::\n:::\n\n\nWe'll use our old friend linear regression, $y = b_0 + b_1 \\cdot x + \\varepsilon$.  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlinmod <- lm(syndens ~ age, data = syndat)\n```\n:::\n\n\n:::: {.columns}\n::: {.column width=\"60%\"}\n\n\nWe'll get out some estimated coefficients, some $t$ statistics, and some p-values:  \n\n- The intercept: $b_0$ = 4.39, t(72)=8.17, p < .001  \n- The estimated coefficient of x: $b_1$ = 0.3, t(72)=8.17, p < .001   \n\nJob done? Clearly not - we need only overlay model upon raw data (@fig-dfeg2) to see we are missing some key parts of the pattern.  \n\n:::\n::: {.column width=\"40%\"}\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Uh-oh... ](03a_poly_files/figure-html/fig-dfeg2-1.png){#fig-dfeg2 fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n::::\n\n::: {.callout-note collapse=\"true\"}\n#### We can see this in our residuals!!  \n\nLet's just do a quick `plot(model)` for some diagnostic plots of my linear model:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nplot(linmod)\n```\n\n::: {.cell-output-display}\n![](03a_poly_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\nDoes it look like the residuals are independently and identically distributed? Not really. We can see that the residuals do not have a constant mean of zero across the fitted values. This makes sense, because the line is below all of the points for people 5 years old, and then it's above all the points when $age<3$ and $age>15$. We need to find some way of incorporating the clearly non-linear relationship between the two variables into our model. \n\n:::\n\n\n# What is a polynomial?  \n\nFor many purposes, extending the linear model to include higher-order terms can allow us to usefully summarise a non-linear relationships between two variables. For instance, fitting models with linear and quadratic terms ($y$ = $b_0 + b_1 \\cdot x \\ + b_2 \\cdot x^2 + \\varepsilon$) and extending these to cubic ($y$ = $b_0 + b_1 \\cdot x \\ + b_2 \\cdot x^2 + b_3 \\cdot x^3 + \\varepsilon$) (or beyond), may aid in modelling nonlinear patterns, as in @fig-dfeg3\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Linear, quadratic and cubic models fitted to the same dataset.](03a_poly_files/figure-html/fig-dfeg3-1.png){#fig-dfeg3 fig-align='center' width=100%}\n:::\n:::\n\n\n\n\n:::sticky\nPolynomials are mathematical expressions which involve a sum of powers. For instance:\n\n- $y = 4 + x + x^2$ is a second-order polynomial as the highest power of $x$ that appears is $x^2$  \n- $y = 9x + 2x^2 + 4x^3$ is a third-order polynomial as the highest power of $x$ that appears is $x^3$  \n- $y = x^6$ is a sixth-order polynomial as the highest power of $x$ that appears is $x^6$  \n\n::: {.callout-note collapse=\"true\"}\n#### How does a polynomial term capture non-linearity?   \n\nSuppose we have the model $y = b_0 + b_1 \\cdot x + \\varepsilon$. \nLet's take a sequence of values for $x$, and write out the model equation for the predicted values $\\hat y$ from this model.  \n\nWe can see that for each row, the predicted value increases by $b_1$. In the column with example coefficients, each row increases by 1.  \n\n\n| x | predicted y | predicted y if e.g. $b_0=1$ and $b_1=1$ |\n| ---- | ---- | ---- |\n| 0 | $b_0 + b_1 \\cdot 0$ | $1+1 \\cdot 0 = 1$ |\n| 1 | $b_0 + b_1 \\cdot 1$ | $1+1 \\cdot 1 = 2$ |\n| 2 | $b_0 + b_1 \\cdot 2$ | $1+1 \\cdot 2 = 3$ |\n| 3 | $b_0 + b_1 \\cdot 3$ | $1+1 \\cdot 3 = 4$ |\n| ... | ... | ... |\n\n\nNow let's do the same for the model with the quadratic term in, $y = b_0 + b_1 \\cdot x + b_2 \\cdot x^2 + \\varepsilon$.  \nWe can see now that each row doesn't increase by the same amount! The increases are 2, 4, 6 for our example coefficients.  \n\n\n| x | predicted y | predicted y if e.g. $b_0=1$, $b_1=1$ and $b_2=1$ |\n| ---- | ---- | ---- |\n| 0 | $b_0 + b_1 \\cdot 0 + b_2 \\cdot 0^2$ | $1+1 \\cdot 0 + 1 \\cdot 0^2 = 1$ |\n| 1 | $b_0 + b_1 \\cdot 1 + b_2 \\cdot 1^2$ | $1+1 \\cdot 1 + 1 \\cdot 1^2 = 3$ |\n| 2 | $b_0 + b_1 \\cdot 2 + b_2 \\cdot 2^2$ | $1+1 \\cdot 2 + 1 \\cdot 2^2 = 7$ |\n| 3 | $b_0 + b_1 \\cdot 3 + b_2 \\cdot 3^2$ | $1+1 \\cdot 3 + 1 \\cdot 3^2 = 13$ |\n| ... | ... | ... |\n\nThis is because the value of $x^2$ is bigger for bigger values of $x$. Hence the difference between predicted values of $y$ when $x=9$ and $x=10$ is much bigger than it is between $x=0$ and $x=1$.  \n\nYou can see the linear and the quadratic lines we just talked about in the figure below:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03a_poly_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n:::\n:::\n\n\n:::: {.columns}\n::: {.column width=\"50%\"}\nAs the order of polynomials increases, we tend to be less interested in these terms in our model. Linear change is the easiest to think about: are things going up? or down? (or neither?). Quadratic change is the next most interesting, and it may help to think of this as the \"rate of change\". For instance, in @fig-quad1, it is the quadratic term which differs between the two groups trajectories. \n:::\n::: {.column width=\"10%\"}\n:::\n::: {.column width=\"40%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Two lines for which the quadratic term differs](03a_poly_files/figure-html/fig-quad1-1.png){#fig-quad1 fig-align='center' width=80%}\n:::\n:::\n\n:::\n::::\n\n::: {.callout-note collapse=\"true\"}\n#### Positive and negative coefficients for quadratic terms\n\nOne thing to focus on is the sign of the quadratic coefficient. When a quadratic term is positive, the curve is $\\cup$ shaped, and when it is negative, the curve is $\\cap$ shaped. \nTo help illustrate, consider what each value from -10 to 10 is when squared (they're all positive, as in the RH side of @fig-quad3)\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Negative quadratic term (Left) and Positive quadratic term (Right) lead to curvatures that are either U shaped (positive) or inverted-U shaped (negative)](03a_poly_files/figure-html/fig-quad3-1.png){#fig-quad3 fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n\n\n## Raw Polynomials\n\n\nThere are two types of polynomial we can construct. \"Raw\" (or \"Natural\") polynomials are the straightforward ones that you would expect (example in the table below), where the original value of $x$ is squared/cubed. \n\n\n| $x$ | $x^2$ | $x^3$ |\n| ---- | ---- | ---- |\n| 1 | 1 | 1 |\n| 2 | 4 | 8 |\n| 3 | 9 | 27 |\n| 4 | 16 | 64 |\n| 5 | 25 | 125 |\n| ... | ... | ... |\n\n\nWe can quickly get these in R using the `poly()` function. As we want to create \"raw\" polynomials, we need to make sure to specify `raw = TRUE` or we get something else (we'll talk about what they are in a second!).  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npoly(1:10, degree = 3, raw=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       1   2    3\n [1,]  1   1    1\n [2,]  2   4    8\n [3,]  3   9   27\n [4,]  4  16   64\n [5,]  5  25  125\n [6,]  6  36  216\n [7,]  7  49  343\n [8,]  8  64  512\n [9,]  9  81  729\n[10,] 10 100 1000\nattr(,\"degree\")\n[1] 1 2 3\nattr(,\"class\")\n[1] \"poly\"   \"matrix\"\n```\n:::\n:::\n\n\nLet's now use these with our example data we had been plotting above.  \nFirst lets add new variables to the dataset, which are the polynomials of our $x$ variable:    \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsyndat <- \n  syndat |> \n    mutate(\n      # poly1 is the first column\n      poly1 = poly(age, degree = 3, raw = TRUE)[,1],\n      # poly2 is the second\n      poly2 = poly(age, degree = 3, raw = TRUE)[,2],\n      # poly3 is the third\n      poly3 = poly(age, degree = 3, raw = TRUE)[,3]\n    )\n```\n:::\n\n\nAnd now lets use them in our model as predictors:  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncubicmod <- lm(syndens ~ poly1 + poly2 + poly3, data = syndat)\n```\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n#### other ways to get polynomials into the model\n\nAs we're working with raw polynomials, we could just do:  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsyndat |> \n  mutate(\n    poly1 = age,\n    poly2 = age^2,\n    poly3 = age^3\n  )\n```\n:::\n\n\nOr we could even just specify the calculations for each term _inside_ the call to `lm()`:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlm(syndens ~ age + I(age^2) + I(age^3), data = syndat)\n```\n:::\n\n\nOr even use the `poly()` function:  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlm(syndens ~ poly(age, degree=3, raw=TRUE), data = syndat)\n```\n:::\n\n\n:::\n::: {.callout-note collapse=\"true\"}\n#### A handy function from Dan\n\nDan has a nice function that may be handy. It adds the polynomials to your dataset for you:  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# import Dan's code and make it available in our own R session\n# you must do this in every script you want to use this function\nsource(\"https://uoepsy.github.io/msmr/functions/code_poly.R\")\n\nsyndat <- read_csv(\"https://uoepsy.github.io/data/msmr_synapticdens.csv\")\nsyndat <- code_poly(df = syndat, predictor = 'age', poly.order = 3, \n                    orthogonal = FALSE, draw.poly = FALSE)\nhead(syndat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 6\n    age syndens age.Index poly1 poly2 poly3\n  <dbl>   <dbl>     <dbl> <dbl> <dbl> <dbl>\n1   0.1   0.615         1   0.1  0.01 0.001\n2   0.2   0.908         2   0.2  0.04 0.008\n3   0.6   0.1           3   0.6  0.36 0.216\n4   0.7   1.81          4   0.7  0.49 0.343\n5   0.9   1.44          5   0.9  0.81 0.729\n6   1     0.615         6   1    1    1    \n```\n:::\n:::\n\n:::\n\n\nJust to see it in action, let's take a look at the predicted values from our model.  \nTake for instance, the 9th row below. The predicted value of y (shown in the `.fitted` column) is:  \n$\\hat y_9 = b_0 + b_1 \\cdot x_9 + b_2 \\cdot x^2_9 + b_3 \\cdot x^3_9$  \n$\\hat y_9 = b_0 + b_1 \\cdot 2 + b_2 \\cdot 4 + b_3 \\cdot 8$  \n$\\hat y_9 = -1.843 + 3.375 \\cdot 2 + -0.332 \\cdot 4 + 0.0097 \\cdot 8$  \n$\\hat y_9 = 3.66$.  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(broom)\naugment(cubicmod) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 74 × 10\n   syndens poly1 poly2 poly3 .fitted  .resid   .hat .sigma   .cooksd .std.resid\n     <dbl> <dbl> <dbl> <dbl>   <dbl>   <dbl>  <dbl>  <dbl>     <dbl>      <dbl>\n 1   0.615   0.1  0.01 0.001 -1.51    2.12   0.170    1.62 0.104         1.42  \n 2   0.908   0.2  0.04 0.008 -1.18    2.09   0.155    1.63 0.0886        1.39  \n 3   0.1     0.6  0.36 0.216  0.0651  0.0349 0.109    1.65 0.0000155     0.0226\n 4   1.81    0.7  0.49 0.343  0.361   1.45   0.0992   1.64 0.0240        0.933 \n 5   1.44    0.9  0.81 0.729  0.933   0.510  0.0829   1.65 0.00239       0.326 \n 6   0.615   1    1    1      1.21   -0.596  0.0759   1.65 0.00294      -0.379 \n 7   0.615   1.6  2.56 4.10   2.75   -2.13   0.0465   1.63 0.0217       -1.33  \n 8   0.310   1.7  2.89 4.91   2.98   -2.67   0.0433   1.62 0.0316       -1.67  \n 9   1.21    2    4    8      3.66   -2.45   0.0361   1.62 0.0217       -1.52  \n10   2.19    2.1  4.41 9.26   3.87   -1.68   0.0343   1.64 0.00968      -1.04  \n# ℹ 64 more rows\n```\n:::\n:::\n\n\nIf we plot the predictions with `poly1` on the x-axis (`poly1` is just the same as our `age` variable with a different name!), we can see that we are able to model a non-linear relationship between y and x (between synaptic density and age), via a combination of linear parameters!  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(broom)\naugment(cubicmod, interval=\"confidence\") |>\n  ggplot(aes(x=poly1))+\n  geom_point(aes(y=syndens),size=2,alpha=.3) + \n  geom_line(aes(y=.fitted),col=\"darkorange\") +\n  geom_ribbon(aes(ymin=.lower,ymax=.upper),fill=\"darkorange\", alpha=.2)+\n  labs(x=\"age\") # our x-axis, \"poly1\", is just age!  \n```\n\n::: {.cell-output-display}\n![a cubic model](03a_poly_files/figure-html/fig-fittedcubic-1.png){#fig-fittedcubic fig-align='center' width=80%}\n:::\n:::\n\n\nNow lets look at our coefficients:   \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsummary(cubicmod)\n```\n:::\n\n```\n...\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -1.842656   0.704193  -2.617   0.0109 *  \npoly1        3.375159   0.345570   9.767 1.06e-14 ***\npoly2       -0.331747   0.044664  -7.428 2.06e-10 ***\npoly3        0.009685   0.001614   6.001 7.79e-08 ***\n---\n```\n\nWith polynomials the interpretation is a little tricky because we have 3 coefficients that together explain the curvy line we see in @fig-fittedcubic, and these coefficients are all dependent upon one another.  \n\n- `(Intercept)` = When all predictors are zero, i.e. the synaptic density at age 0.  \n- `poly1` coefficient = The instantaneous change in $y$ when $x=0$. \n- `poly2` coefficient = Represents \"rate of change of the rate of change\" at $x=0$. In other words, the _curvature_ at $x=0$.  \n- `poly3` coefficient = Represents how the curvature is changing. It gets more abstract as the order of polynomials increase, so the easiest way to think about it is \"the wiggliness\"  \n\nI've tried to represent what each term adds in @fig-polycoef. The intercept is the purple point where age is zero. The `poly1` coefficient is represented by the dashed blue line - the tangent of the curve at age zero. The `poly2` coef, rperesented by the dashed green line, is how the angle of the blue line is changing at age zero. Finally, the `poly3` coefficient tells us how much this curvature is changing (which gets us to our dashed orange line).  \n\nNote that these interpretations are all dependent upon the others - e.g. the interpretation of `poly2` refers to how the angle of `poly1` is changing.  \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![the instantaneous rate of change at x=0 (blue), the rate of change in the rate of change (i.e. curvature, green), and 'rate of change in rate of change in rate of change' (i.e. wiggliness, orange)](03a_poly_files/figure-html/fig-polycoef-1.png){#fig-polycoef fig-align='center' width=80%}\n:::\n:::\n\n\n## Orthogonal Polynomials  \n\nThe `poly()` function also enables us to compute \"orthogonal polynomials\". This is the same information as the raw polynomials, re-expressed into a set of __uncorrelated__ variables.  \n\nRaw polynomials are correlated, which is what results makes their interpretation depend upon one another. For example, if we take the numbers 1,2,3,4,5, then these numbers are _by definition_ correlated with their squares 1,4,9,16,25. As we increase from 1 to 5, we necessarily increase from 1 to 25.  \nHowever, if we first _center_ the set of numbers, so that 1,2,3,4,5 becomes -2,1,0,1,2, then their squares are 4,1,0,1,4 - they're not correlated!  \n\nOrthogonal polynomials essentially do this centering and scaling for $k$ degrees of polynomial terms.  \n\n:::: {.columns}\n::: {.column width=\"45%\"}\nSo while raw polynomials look like this:  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmatplot(poly(1:10, 3, raw=T), type=\"l\", lwd=2)\n```\n\n::: {.cell-output-display}\n![](03a_poly_files/figure-html/unnamed-chunk-20-1.png){fig-align='center' width=80%}\n:::\n:::\n\n:::\n::: {.column width=\"10%\"}\n:::\n::: {.column width=\"45%\"}\nOrthogonal polynomials look like this:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmatplot(poly(1:10, 3, raw=F), type=\"l\", lwd=2)\n```\n\n::: {.cell-output-display}\n![](03a_poly_files/figure-html/unnamed-chunk-21-1.png){fig-align='center' width=80%}\n:::\n:::\n\n:::\n::::\n\nThis orthogonality allows us to essentially capture express the linear trend, curvature, and 'wiggliness' of the trajectory **independently** from one another, rather than relative to one another.  \n\nUltimately, models using raw polynomials and using orthogonal polynomials are identical, but the coefficients we get out represent different things.\n\nLet's overwrite our `poly` variables with orthogonal polynomials, by setting `raw = FALSE`:  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsyndat <- \n  syndat |> \n    mutate(\n      poly1 = poly(age,degree = 3, raw=FALSE)[,1],\n      poly2 = poly(age,degree = 3, raw=FALSE)[,2],\n      poly3 = poly(age,degree = 3, raw=FALSE)[,3],\n    )\n```\n:::\n\n\nAnd fit our model:  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nOcubicmod <- lm(syndens ~poly1+poly2+poly3,syndat)\nsummary(Ocubicmod)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n```\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   6.5917     0.1902  34.649  < 2e-16 ***\npoly1        12.9161     1.6365   7.892 2.88e-11 ***\npoly2       -14.3156     1.6365  -8.748 7.68e-13 ***\npoly3         9.8212     1.6365   6.001 7.79e-08 ***\n---\n```\n\nThe interpretation of the estimates themselves are not really very tangible anymore, because the scaling of the orthogonal polynomials has lost a clear link back to \"age\".  \n\nAs the polynomial terms are centered on the mean of age, the intercept is the estimated synaptic density at the mean age (the purple dot in @fig-polycoeforth). The `poly1`, `poly2` and `poly3` coefficient represent the independent overall linear trend, centered curvature, and \"wiggliness\" of the relationship between synaptic density and age (as shown in the blue, green and orange lines in @fig-polycoeforth respectively).  \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![the independent rate of change (blue), curvature (green) and wiggliness (orange) of the y~x relationship](03a_poly_files/figure-html/fig-polycoeforth-1.png){#fig-polycoeforth fig-align='center' width=80%}\n:::\n:::\n\n\n## Raw vs Orthognal  \n\nThe two models we have seen, one with raw polynomials, and one with orthogonal polynomials, are identical.  \n\nFor proof, compare the two:  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nanova(\n  lm(syndens ~ poly(age, 3, raw = TRUE), data = syndat),\n  lm(syndens ~ poly(age, 3, raw = FALSE), data = syndat)\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nModel 1: syndens ~ poly(age, 3, raw = TRUE)\nModel 2: syndens ~ poly(age, 3, raw = FALSE)\n  Res.Df    RSS Df   Sum of Sq F Pr(>F)\n1     70 187.47                        \n2     70 187.47  0 -1.1369e-13         \n```\n:::\n:::\n\n\nSo why would we choose one vs the other? \n\nThe main reason is if we are interested in evaluating things *relative to baseline*, in which case raw polynomials allow us to do just that. If we are instead interested in evaluating the trends **across** the timecourse, then we would want orthogonal polynomials. \n\nConsider two examples:  \n\n:::: {.columns}\n::: {.column width=\"45%\"}\n__Example 1__  \n\nA student advisor who meets with students as they start university wants to know about how happiness evolves over the course of students' year at univeristy, and wonders if this is different between introverted and extraverted individuals.  \n\nIn this case, they would want *raw* polynomials, so that they can assess whether the two personality types differ when they first come to University, and how this is likely to evolve from that point.  \n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03a_poly_files/figure-html/unnamed-chunk-27-1.png){fig-align='center' width=80%}\n:::\n:::\n\n:::\n::: {.column width=\"10%\"}\n:::\n::: {.column width=\"45%\"}\n__Example 2__  \n\nA company has four stores across the UK, and they want to know if the stores have differed in how variable their earnings have been across the year. \n\nIn this case, looking at change relative to month 1 isn't very useful. It would, for instance, tell us that the linear trend for store2's earnings is upwards, whereas the linear trend for store 1 is flat. This makes store2 look better.  \nIf we used orthogonal polynomials instead, we would see that the linear trend for store 2 is actually *negative* compared to store1. \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03a_poly_files/figure-html/unnamed-chunk-28-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n::::\n\n:::sticky\n\nRaw? Orthogonal?  \n\nFor non-linear relationships, a good plot is usually the most important thing!  \n\n:::\n\n\n# Example in MLM\n\n\n:::frame\n__Data: midlife_ape.csv__  \n\n\n\n\n\n\nPrevious research has evidenced a notable dip in happiness for middle-aged humans. Interestingly, this phenomenon has even been observed in other primates, such as chimpanzees.  \n\nThe present study is interested in examining whether the 'middle-age slump' happens to a similar extent for Orangutans as it does for Chimpanzees. \n\n200 apes (117 Chimps and 83 Orangutans) were included in the study. All apes were studied from early adulthood (10-12 years old for most great apes), and researchers administered the Happiness in Primates (HiP) scale to each participant every 3 years, up until the age of 40.  \n\nThe data are available at [https://uoepsy.github.io/data/midlife_ape.csv](https://uoepsy.github.io/data/midlife_ape.csv){target=\"_blank\"}.  \n\nThe dataset has already been cleaned, and the researchers have confirmed that it includes 117 Chimps and 83 Orangutans, and every ape has complete data (i.e. 10 rows for each ape). A data dictionary can be found in @tbl-midlifedict\n\n\n::: {#tbl-midlifedict .cell layout-align=\"center\" tbl-cap='Data Dictionary: midlife_ape.csv'}\n::: {.cell-output-display}\n```{=html}\n<div id=\"yuorywqdkd\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#yuorywqdkd table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#yuorywqdkd thead, #yuorywqdkd tbody, #yuorywqdkd tfoot, #yuorywqdkd tr, #yuorywqdkd td, #yuorywqdkd th {\n  border-style: none;\n}\n\n#yuorywqdkd p {\n  margin: 0;\n  padding: 0;\n}\n\n#yuorywqdkd .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#yuorywqdkd .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#yuorywqdkd .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#yuorywqdkd .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#yuorywqdkd .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#yuorywqdkd .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yuorywqdkd .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#yuorywqdkd .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#yuorywqdkd .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#yuorywqdkd .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#yuorywqdkd .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#yuorywqdkd .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#yuorywqdkd .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#yuorywqdkd .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#yuorywqdkd .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#yuorywqdkd .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#yuorywqdkd .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#yuorywqdkd .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#yuorywqdkd .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yuorywqdkd .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#yuorywqdkd .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#yuorywqdkd .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#yuorywqdkd .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yuorywqdkd .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#yuorywqdkd .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#yuorywqdkd .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yuorywqdkd .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yuorywqdkd .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#yuorywqdkd .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yuorywqdkd .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#yuorywqdkd .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yuorywqdkd .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#yuorywqdkd .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yuorywqdkd .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#yuorywqdkd .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yuorywqdkd .gt_left {\n  text-align: left;\n}\n\n#yuorywqdkd .gt_center {\n  text-align: center;\n}\n\n#yuorywqdkd .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#yuorywqdkd .gt_font_normal {\n  font-weight: normal;\n}\n\n#yuorywqdkd .gt_font_bold {\n  font-weight: bold;\n}\n\n#yuorywqdkd .gt_font_italic {\n  font-style: italic;\n}\n\n#yuorywqdkd .gt_super {\n  font-size: 65%;\n}\n\n#yuorywqdkd .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#yuorywqdkd .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#yuorywqdkd .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#yuorywqdkd .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#yuorywqdkd .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#yuorywqdkd .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#yuorywqdkd .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#yuorywqdkd .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#yuorywqdkd div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"variable\">variable</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"description\">description</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"variable\" class=\"gt_row gt_left\">apeID</td>\n<td headers=\"description\" class=\"gt_row gt_left\">Ape's Name (all names are chosen to be unique)</td></tr>\n    <tr><td headers=\"variable\" class=\"gt_row gt_left\">age</td>\n<td headers=\"description\" class=\"gt_row gt_left\">Age (in years) at assessment</td></tr>\n    <tr><td headers=\"variable\" class=\"gt_row gt_left\">species</td>\n<td headers=\"description\" class=\"gt_row gt_left\">Species (chimp v orangutan)</td></tr>\n    <tr><td headers=\"variable\" class=\"gt_row gt_left\">HiP</td>\n<td headers=\"description\" class=\"gt_row gt_left\">Happiness in Primate Scale (range 1 to 18)</td></tr>\n    <tr><td headers=\"variable\" class=\"gt_row gt_left\">timepoint</td>\n<td headers=\"description\" class=\"gt_row gt_left\">Study visit (1 to 10)</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n:::\n\n\nInitial plots are hard see when we plot a different line for each ape:  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmlape <- read_csv(\"https://uoepsy.github.io/data/midlife_ape.csv\")\n\nggplot(mlape, aes(x=age,y=HiP))+\n  geom_line(aes(group=apeID,col=species),alpha=.3) +\n  scale_color_manual(values=c(\"grey40\",\"darkorange\")) + \n  facet_wrap(~species)\n```\n\n::: {.cell-output-display}\n![](03a_poly_files/figure-html/unnamed-chunk-31-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\nWhat is often more useful for exploring is to plot the averages in y across values of x.  \nHere we can see some slight curvature - the chimps seem to have a notable dip in happiness at about 20 years old.  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(mlape, aes(x=age,y=HiP, col=species))+\n  scale_color_manual(values=c(\"grey40\",\"darkorange\")) + \n  stat_summary(geom=\"pointrange\")+\n  stat_summary(geom=\"line\")\n```\n\n::: {.cell-output-display}\n![](03a_poly_files/figure-html/unnamed-chunk-32-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n::: {.callout-tip collapse=\"true\"}\n#### Note\nThese plots can be misleading, especially in the event of missing data or incomplete trajectories.  For instance, suppose we had data on happy chimps when they are young and when they are old, but not in the middle of their lives. The average of all chimps at each data point would look non-linear!  \n\nThis illusion would not fool our multilevel model, however, which estimates the average of the individual lines\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![hypothetical: if happier apes have missing data in mid life, the average looks non-linear, even though for each ape it is linear!](03a_poly_files/figure-html/fig-missing-1.png){#fig-missing fig-align='center' width=100%}\n:::\n:::\n\n\n\n:::\n\n\n> The present study is interested in examining whether the 'middle-age slump' happens to a similar extent for Orangutans as it does for Chimpanzees. \n\nWe're interested in the difference in curvature across adulthood between Chimps and Orangutans. This is a case where we're not hugely interested in some specific point in time, so orthogonal polynomials might be easier.  \nBoth `age` and `timepoint` here contain the same information, so we can use either to create our polynomials:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmlape <- mlape |> \n  mutate(\n    poly1 = poly(timepoint,2,raw=F)[,1],\n    poly2 = poly(timepoint,2,raw=F)[,2],\n  )\n```\n:::\n\n\nAnd then we'll fit our model.  \n\nWe know we're interested in the change in happiness across age, so our model is going to take the form: \n```\nlmer(HiP ~ age ....\n```\n. But we've just said that we're interested in the curvature of this, so we're going to re-express `age` as the two parts, the linear and the quadratic:  \n```\nlmer(HiP ~ poly1 + poly2 ....\n```\nWe're interested in the differences in the \"hapiness ~ age\" relationship between Orangutans and Chimps, so we can estimate species-differences in both aspects of the trajectroy (the linear and the quadratic).  \n```\nlmer(HiP ~ (poly1 + poly2) * species ....\n```\nthis is equivalent to\n```\nlmer(HiP ~ poly1 + poly2 + species + \n           poly1:species + poly2:species ....\n```\n\nFinally, we want to account for the variability in happiness due to random ape-to-ape differences (i.e. some are just happy, some are not).  \n```\nlmer(HiP ~ (poly1 + poly2) * species + \n           (1 + ... | apeID), data = mlape)\n```\n\nLastly, it's very likely that 'change over time' varies from ape-to-ape, so we want to allow the slopes of age to vary. We can allow one or both of the poly1 and poly2 terms to vary, so we'll start with both:  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(lme4)\nmod1 = lmer(HiP ~ 1 + (poly1+poly2)*species+\n            (1+poly1+poly2|apeID), \n            data = mlape)\n```\n:::\n\n\nand it converges (hooray!). \n\nNow let's plot the average value of happiness across time, alongside the average _predicted_ value.  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbroom.mixed::augment(mod1) |>\n  mutate(poly1 = round(poly1,4)) |>\n  ggplot(aes(x=poly1,y=.fitted,col=species))+\n  # the average value across time: \n  stat_summary(geom=\"pointrange\",aes(y=HiP))+\n  # the average model predicted value\n  stat_summary(geom=\"line\") + \n  scale_color_manual(values=c(\"grey40\",\"darkorange\"))\n```\n\n::: {.cell-output-display}\n![](03a_poly_files/figure-html/unnamed-chunk-36-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\nIt looks like both species have a bit of curvature, and this may be more pronounced for chimps than for orangutans.  \n\nLet's look at our parameters to see:  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# fitted with satterthwaite to get some p-values\nlmerTest::lmer(HiP ~ 1 + (poly1+poly2)*species+\n            (1+poly1+poly2|apeID), \n            data = mlape) |>\n  summary()\n```\n:::\n\n```\n...\nFixed effects:\n                       Estimate Std. Error       df t value Pr(>|t|)    \n(Intercept)              9.1155     0.1955 198.0009  46.630  < 2e-16 ***\npoly1                    1.8796     1.5391 197.9811   1.221   0.2235    \npoly2                    9.4004     1.7454 197.9991   5.386 2.03e-07 ***\nspeciesorangutan         0.6853     0.3035 198.0009   2.258   0.0250 *  \npoly1:speciesorangutan   0.1104     2.3892 197.9811   0.046   0.9632    \npoly2:speciesorangutan  -6.2718     2.7093 197.9991  -2.315   0.0216 *  \n```\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div id=\"migjbwdoyo\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#migjbwdoyo table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#migjbwdoyo thead, #migjbwdoyo tbody, #migjbwdoyo tfoot, #migjbwdoyo tr, #migjbwdoyo td, #migjbwdoyo th {\n  border-style: none;\n}\n\n#migjbwdoyo p {\n  margin: 0;\n  padding: 0;\n}\n\n#migjbwdoyo .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#migjbwdoyo .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#migjbwdoyo .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#migjbwdoyo .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#migjbwdoyo .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#migjbwdoyo .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#migjbwdoyo .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#migjbwdoyo .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#migjbwdoyo .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#migjbwdoyo .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#migjbwdoyo .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#migjbwdoyo .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#migjbwdoyo .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#migjbwdoyo .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#migjbwdoyo .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#migjbwdoyo .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#migjbwdoyo .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#migjbwdoyo .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#migjbwdoyo .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#migjbwdoyo .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#migjbwdoyo .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#migjbwdoyo .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#migjbwdoyo .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#migjbwdoyo .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#migjbwdoyo .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#migjbwdoyo .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#migjbwdoyo .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#migjbwdoyo .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#migjbwdoyo .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#migjbwdoyo .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#migjbwdoyo .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#migjbwdoyo .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#migjbwdoyo .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#migjbwdoyo .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#migjbwdoyo .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#migjbwdoyo .gt_left {\n  text-align: left;\n}\n\n#migjbwdoyo .gt_center {\n  text-align: center;\n}\n\n#migjbwdoyo .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#migjbwdoyo .gt_font_normal {\n  font-weight: normal;\n}\n\n#migjbwdoyo .gt_font_bold {\n  font-weight: bold;\n}\n\n#migjbwdoyo .gt_font_italic {\n  font-style: italic;\n}\n\n#migjbwdoyo .gt_super {\n  font-size: 65%;\n}\n\n#migjbwdoyo .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#migjbwdoyo .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#migjbwdoyo .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#migjbwdoyo .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#migjbwdoyo .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#migjbwdoyo .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#migjbwdoyo .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#migjbwdoyo .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#migjbwdoyo div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"term\">term</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"est\">est</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"p\">p</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"what it tells us\">what it tells us</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">(Intercept)</td>\n<td headers=\"est\" class=\"gt_row gt_right\">9.12</td>\n<td headers=\"p\" class=\"gt_row gt_right\">***</td>\n<td headers=\"what it tells us\" class=\"gt_row gt_left\">the average happiness at the average age is 9.11 (not hugely interesting).</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">poly1</td>\n<td headers=\"est\" class=\"gt_row gt_right\">1.88</td>\n<td headers=\"p\" class=\"gt_row gt_right\"></td>\n<td headers=\"what it tells us\" class=\"gt_row gt_left\">there is no significant linear trend of happiness over time for Chimpanzees (you can kind of see this in our plot above - they more or less end where they started)</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">poly2</td>\n<td headers=\"est\" class=\"gt_row gt_right\">9.40</td>\n<td headers=\"p\" class=\"gt_row gt_right\">***</td>\n<td headers=\"what it tells us\" class=\"gt_row gt_left\">there *is* a significant curvature to the chimpanzees' happiness trajectory. Because this estimate is positive, that means we know it is u-shaped and not n-shaped - i.e. - Chimpanzees have a mid-life slump in happiness!</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">speciesorangutan</td>\n<td headers=\"est\" class=\"gt_row gt_right\">0.69</td>\n<td headers=\"p\" class=\"gt_row gt_right\">*</td>\n<td headers=\"what it tells us\" class=\"gt_row gt_left\">at the average age, Orangutans are happier than Chimpanzees.</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">poly1:speciesorangutan</td>\n<td headers=\"est\" class=\"gt_row gt_right\">0.11</td>\n<td headers=\"p\" class=\"gt_row gt_right\"></td>\n<td headers=\"what it tells us\" class=\"gt_row gt_left\">the linear trend for Orangutans is not significantly different from the linear trend for Chimpanzees</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">poly2:speciesorangutan</td>\n<td headers=\"est\" class=\"gt_row gt_right\">-6.27</td>\n<td headers=\"p\" class=\"gt_row gt_right\">*</td>\n<td headers=\"what it tells us\" class=\"gt_row gt_left\">the curvature for Orangutans is significantly different from the curvature for Chimpanzees. Because the estimate is negative, that means it is less u-shaped than the Chimpanzee line - i.e. Orangutans do not have as much of a mid-life slump as Chimps do!</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n\nAs we have two groups, the parameters provide us with all the tests we need to identify \"do species differ in the extent that they have a mid-life dip in happiness?\"  \nBut if we had $>2$ species and wanted to do test join \"species differences\", we could set up models for comparisons, i.e. allowing species to interact with different parts: \n\n- `HiP ~ (poly1 + poly2)*species`\n    + species differ in their linear and quadratic trends\n- `HiP ~ poly1*species + poly2`\n    + species differ in their linear trend only\n- `HiP ~ poly1 + poly2 + species`\n    + species differ in their overall happiness, but not in change over age\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n\n::: {.callout-caution collapse=\"true\"}\n#### TIMTOWTDI \nAs always, **there is more than one way to do it (TIMTOWTDI)**  \n\nThe approach we are learning about in this course is only one of many approaches to studying non-linearity. \nSome alternatives, which you may come across in future work, are listed below.\n\n**Piecewise linear regression:** fit a linear model with cut point(s) along x (determine cut points by greatest reduction in mean squared error $\\sigma$)\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03a_poly_files/figure-html/unnamed-chunk-40-1.png){fig-align='center' width=350px}\n:::\n:::\n\n\n**Piecewise polynomial** fit the model $y \\sim x + x^2 + x^3$ to equal chunks of x.  \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03a_poly_files/figure-html/unnamed-chunk-41-1.png){fig-align='center' width=350px}\n:::\n:::\n\n\n\n**Splines, penalised splines & GAMS** \n\nThis begins to open a huge can of worms, but if you foresee yourself needing these sort of tools, then Simon Wood, author of the **mgcv** R package for fitting generalised additive models (GAMS), has plenty of materials on [his webpage](https://www.maths.ed.ac.uk/~swood34/talks/snw-Koln.pdf) (Warning, these are fairly technical). There are also a reasonable number of tutorials [online which are really good](https://www.google.com/search?hl=&site=&q=gam+in+r+tutorial).  \n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03a_poly_files/figure-html/unnamed-chunk-42-1.png){fig-align='center' width=350px}\n:::\n:::\n\n\n\n:::\n\n\n",
    "supporting": [
      "03a_poly_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/panelset-0.3.0/panelset.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/panelset-0.3.0/panelset.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}