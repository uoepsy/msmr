{
  "hash": "04fc3690b5d3e6ce853e7f2548cc3c57",
  "result": {
    "markdown": "---\ntitle: \"2B: Logistic MLM\"\nparams: \n    SHOW_SOLS: FALSE\n    TOGGLE: TRUE\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\nThe vast majority of the transition across from linear multilevel models to logistic multilevel models is identical to what we talked about in USMR for single level regression models. Remember how we simply used `glm()` and could specify the `family = \"binomial\"` in order to fit a logistic regression? Well it's much the same thing for multi-level models! \n\n+ Gaussian (normal) model: \n  - `lmer(y ~ x1 + x2 + (1 | g), data = data)`  \n+ Binomial model:^[Remember that binary outcomes are just a special case of the binomial]  \n  - `glmer(y ~ x1 + x2 + (1 | g), data = data, family = binomial(link='logit'))`<br>or\n  - `glmer(y ~ x1 + x2 + (1 | g), data = data, family = \"binomial\")`<br>or\n  - `glmer(y ~ x1 + x2 + (1 | g), data = data, family = binomial)`\n    \nThe same logic applies as it did for `glm()` where we are not modeling the outcome $y$ directly, but via a mapping, or \"link function\", which in this case is the logistic function. Beyond the material covered in [USMR Week 10](https://uoepsy.github.io/usmr/2324/labs/10a_glm.html){target=\"_blank\"}, there are a few aspects of the logistic multilevel model that are worth commenting on. \n\nFirstly, GLMMs ('generalised linear mixed models') can take more time to run (for bigger datasets we're talking minutes, and sometimes even hours!). \n\nSecondly, our choices of methods of inference (see [2A](02a_inference.html)) are slightly different from what they were for `lmer()`. We continue to have the likelihood based methods as well as parametric bootstrapping (although this will more often result in computational issues with `glmer`). We also have the traditional $z$-statistics that have carried over from `glm()`. We can get confidence intervals that follow this same method by using `confint(model, method=\"Wald\")`, which may often be preferred purely for the fact that they are quick!   \n\nFinally, one small but noteworthy feature of the logistic multilevel model is that our fixed effects coefficients, when translated back to odds ratios, represent \"cluster specific\" effects of a predictor: \n\n- For a linear multilevel model: `lmer(y ~ x + (1 + x | cluster))`, the fixed effect of $x$ gives the change in the $y$ when $x$ is increased by one unit, averaged across clusters \n- For a logistic multilevel model: `glmer(ybin ~ x + (1 + x | cluster), family=binomial)`, the odds ratio for $x$ - `exp(fixef(model))` - gives the multiplicative change in odds of $y$ when $x$ is increased by one unit __for a particular cluster.__  \n\nThis becomes important when deciding if we want to estimate outcomes for individual clusters, or estimate group effects (in which case a mixed model might not be best). \n\n::: {.callout-caution collapse=\"true\"}\n#### optional: why are OR from glmer cluster-specific?  \n\n::::panelset\n:::panel\n#### Linear  \n\nconsider a __linear__ multilevel model:  \n`lmer(respiratory_rate ~ treatment + (1|hospital))`\n\nImagine two patients from different hospitals. One has a treatment, one does not.  \n\n  - patient $j$ from hospital $i$ is \"control\"   \n  - patient $j'$ from hospital $i'$ is \"treatment\"   \n\nThe difference in estimated outcome between patient $j$ and patient $j'$ is the \"the effect of having treatment\" plus the distance in random deviations between hospitals $i$ and $i'$  \n\nmodel for patient $j$ from hospital $i$  \n$\\hat{y}_{ij} = (\\gamma_{00} + \\zeta_{0i}) + b_1 (Treatment_{ij} = 0)$\n\nmodel for patient $j'$ from hospital $i'$  \n$\\hat{y}_{i'j'} = (\\gamma_{00} + \\zeta_{0i'}) + b_1 (Treatment_{i'j'} = 1)$\n\ndifference:  \n$\\hat{y}_{i'j'} - \\hat{y}_{ij} = b_1 + (\\zeta_{0i'} - \\zeta_{0i}) = b_1$\n\nBecause $\\zeta \\sim N(0,\\sigma_\\zeta)$, the differences between all different $\\zeta_{0i'} - \\zeta_{0i}$ average out to be 0. \n\n:::\n:::panel\n#### Logistic\n\nNow consider a __logistic__ multilevel model:  \n`glmer(needs_operation ~ treatment + (1|hospital), family=\"binomial\")`\n\nImagine two patients from different hospitals. One has a treatment, one does not.  \n\n  - patient $j$ from hospital $i$ is \"control\"   \n  - patient $j'$ from hospital $i'$ is \"treatment\"  \n  \nThe difference in __probability of outcome__ between patient $j$ and patient $j'$ is the \"the effect of having treatment\" plus the distance in random deviations between hospitals $i$ and $i'$  \n\nmodel for patient $j$ from hospital $i$  \n$log \\left( \\frac{p_{ij}}{1 - p_{ij}} \\right)  = (\\gamma_{00} + \\zeta_{0i}) + b_1 (Treatment_{ij} = 0)$\n\nmodel for patient $j'$ from hospital $i'$  \n$log \\left( \\frac{p_{i'j'}}{1 - p_{i'j'}} \\right) = (\\gamma_{00} + \\zeta_{0i'}) + b_1 (Treatment_{i'j'} = 1)$\n\ndifference (log odds):  \n$log \\left( \\frac{p_{i'j'}}{1 - p_{i'j'}} \\right) - log \\left( \\frac{p_{ij}}{1 - p_{ij}} \\right) = b_1 + (\\zeta_{0i'} - \\zeta_{0i})$\n\ndifference (odds ratio):  \n$\\frac{p_{i'j'}/(1 - p_{i'j'})}{p_{ij}/(1 - p_{ij})} = e^{b_1 + (\\zeta_{0i'} - \\zeta_{0i})} \\neq e^{b_1}$\n\nHence, the interpretation of $e^{b_1}$ is not the odds ratio for the effect of treatment \"averaged over hospitals\", but rather for patients _from the same hospital_. \n\n:::\n::::\n\n:::\n\n# Example\n\n:::frame\n__Data: monkeystatus.csv__  \n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\nOur primate researchers have been busy collecting more data. They have given a sample of Rhesus Macaques various problems to solve in order to receive treats. Troops of Macaques have a complex social structure, but adult monkeys tend can be loosely categorised as having either a \"dominant\" or \"subordinate\" status. The monkeys in our sample are either adolescent monkeys, subordinate adults, or dominant adults. Each monkey attempted various problems before they got bored/distracted/full of treats. Each problems were classed as either \"easy\" or \"difficult\", and the researchers recorded whether or not the monkey solved each problem. \n\nWe're interested in how the social status of monkeys is associated with the ability to solve problems.  \n\nThe data is available at [https://uoepsy.github.io/data/msmr_monkeystatus.csv](https://uoepsy.github.io/data/msmr_monkeystatus.csv){target=\"_blank\"}.  \n\n:::\n\n## getting to know my monkeys\n\nWe know from the study background that we have a series group of monkeys who have each attempted to solve some problems. If we look at our data, we can see that it is already in _long_ format, in that each row represents the lowest unit of observation (a single problem attempted). We also have the variable `monkeyID` which indicates what monkey each problem has been attempted by. We can see the `status` of each monkey, and the `difficulty` of each task, along with whether it was `solved`:   \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lme4)\nmstat <- read_csv(\"https://uoepsy.github.io/data/msmr_monkeystatus.csv\")\nhead(mstat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  status      difficulty monkeyID solved\n  <chr>       <chr>      <chr>     <dbl>\n1 subordinate easy       Seunghoo      1\n2 subordinate easy       Seunghoo      0\n3 subordinate difficult  Seunghoo      0\n4 subordinate easy       Seunghoo      1\n5 subordinate difficult  Seunghoo      0\n6 subordinate easy       Seunghoo      1\n```\n:::\n:::\n\n\nWe can do some quick exploring to see how many monkeys we have (50), and how many problems each one attempted (min = 3, max = 11:  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmstat |> \n  count(monkeyID) |> # count the monkeys!  \n  summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   monkeyID               n        \n Length:50          Min.   : 3.00  \n Class :character   1st Qu.: 6.25  \n Mode  :character   Median : 8.00  \n                    Mean   : 7.94  \n                    3rd Qu.:10.00  \n                    Max.   :11.00  \n```\n:::\n:::\n\n\nLet's also see how many monkeys of different statuses we have in our sample:  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmstat |> \n  group_by(status) |> # group statuses\n  summarise(\n    # count the distinct monkeys\n    nmonkey = n_distinct(monkeyID)\n  ) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  status      nmonkey\n  <chr>         <int>\n1 adolescent       16\n2 dominant         23\n3 subordinate      11\n```\n:::\n:::\n\n\nIt's often worth plotting as much as you can to get to a sense of what we're working with. Here are the counts of easy/difficult problems that each monkey attempted. We can see that Richard only did difficult problems, and Nadheera only did easy ones, but most of the monkeys did both types of problem.  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# which monkeys did what type of problems? \nmstat |> count(status, monkeyID, difficulty) |>\n  ggplot(aes(x=difficulty,y=n, fill=status))+\n  geom_col()+\n  facet_wrap(~monkeyID) +\n  scale_x_discrete(labels=abbreviate) + \n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](02b_log_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\nWhen working with binary outcomes, it's often useful to calculate and plot proportions. In this case, the proportions of problems solved for each status of monkey. At first glance it looks like \"subordinate\" monkeys solve more problems, and adolescents solve fewer (makes sense - they're still learning!).  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# a quick look at proportions of problems solved:\nggplot(mstat, aes(x=difficulty, y=solved,\n                       col=status))+\n  stat_summary(geom=\"pointrange\",size=1)+\n  facet_wrap(~status)\n```\n\n::: {.cell-output-display}\n![](02b_log_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=80%}\n:::\n:::\n\n  \n  \n## models of monkeys  \n  \nNow we come to fitting our model.  \n\nRecall that we are interested in how the ability to solve problems differs between monkeys of different statuses. It's very likely that difficulty of a problem is going to influence that it is solved, so we'll control for difficulty. \n```\nglmer(solved ~ difficulty + status + \n      ...\n      data = mstat, family = binomial)\n```\nWe know that we have multiple datapoints for each monkey, and it also makes sense that there will be monkey-to-monkey variability in the ability to solve problems (e.g. Brianna may be more likely to solve problems than Jonathan). \n```\nglmer(solved ~ difficulty + status + \n      (1 + ... | monkeyID),\n      data = mstat, family = binomial)\n```\nFinally, it also makes sense that effects of problem-difficulty might vary by monkey (e.g., if Brianna is just really good at solving problems, problem-difficulty might not make much difference. Whereas if Jonathan is struggling with the easy problems, he's likely to really really struggle with the difficult ones!).  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmmod <- glmer(solved ~ difficulty + status + \n      (1 + difficulty | monkeyID),\n      data = mstat, family = binomial)\nsummary(mmod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: solved ~ difficulty + status + (1 + difficulty | monkeyID)\n   Data: mstat\n\n     AIC      BIC   logLik deviance df.resid \n   503.7    531.6   -244.8    489.7      390 \n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-1.9358 -0.6325 -0.3975  0.6748  2.5161 \n\nRandom effects:\n Groups   Name           Variance Std.Dev. Corr \n monkeyID (Intercept)    1.633    1.278         \n          difficultyeasy 1.371    1.171    -0.49\nNumber of obs: 397, groups:  monkeyID, 50\n\nFixed effects:\n                  Estimate Std. Error z value Pr(>|z|)   \n(Intercept)        -1.2531     0.4051  -3.093  0.00198 **\ndifficultyeasy      0.8586     0.3053   2.812  0.00492 **\nstatusdominant      0.6682     0.4714   1.417  0.15636   \nstatussubordinate   1.4596     0.5692   2.564  0.01033 * \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) dffclt sttsdm\ndifficltysy -0.436              \nstatusdmnnt -0.712  0.031       \nstatssbrdnt -0.592  0.033  0.497\n```\n:::\n:::\n\n\n## test and visualisations of monkey status\n\nTo examine if monkey status has an effect, we can compare with the model without `status`:   \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nmmod0 <- glmer(solved ~ difficulty + \n      (1 + difficulty | monkeyID),\n      data = mstat, family = binomial)\nanova(mmod0, mmod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nData: mstat\nModels:\nmmod0: solved ~ difficulty + (1 + difficulty | monkeyID)\nmmod: solved ~ difficulty + status + (1 + difficulty | monkeyID)\n      npar    AIC    BIC  logLik deviance  Chisq Df Pr(>Chisq)  \nmmod0    5 506.13 526.05 -248.07   496.13                       \nmmod     7 503.70 531.58 -244.85   489.70 6.4367  2    0.04002 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\nAnd we can see that the status of monkeys _is_ associated with differences in the probability of successful problem solving ($\\chi^2(2)$ = 6.44, p < 0.05).  \n\n\nAnd if we want to visualise the relevant effect, we can (as we did with `glm()`) plot on the predicted probability scale, which is much easier to interpret:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(effects)\neffect(term=c(\"status\",\"difficulty\"), mod=mmod) |>\n  as.data.frame() |>\n  ggplot(aes(x=difficulty, y=fit))+\n  geom_pointrange(aes(ymin=lower,ymax=upper, col=status),\n                  size=1, lwd=1,\n                  position=position_dodge(width=.3)) +\n  labs(x = \"problem difficulty\", y = \"predicted probability\")\n```\n\n::: {.cell-output-display}\n![](02b_log_files/figure-html/unnamed-chunk-11-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## interpretation\n\nAnd just with the single level logistic models, our fixed effects can be converted to odds ratios (OR), by exponentiation:  \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncbind(\n  fixef(mmod), # the fixed effects\n  confint(mmod, method=\"Wald\", parm=\"beta_\") # Wald CIs for fixed effects\n) |>\n  exp()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                               2.5 %     97.5 %\n(Intercept)       0.285617 0.1291054  0.6318641\ndifficultyeasy    2.359897 1.2971580  4.2933192\nstatusdominant    1.950708 0.7743205  4.9143237\nstatussubordinate 4.304281 1.4106406 13.1336310\n```\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div id=\"tfmvmixirp\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#tfmvmixirp table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#tfmvmixirp thead, #tfmvmixirp tbody, #tfmvmixirp tfoot, #tfmvmixirp tr, #tfmvmixirp td, #tfmvmixirp th {\n  border-style: none;\n}\n\n#tfmvmixirp p {\n  margin: 0;\n  padding: 0;\n}\n\n#tfmvmixirp .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#tfmvmixirp .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#tfmvmixirp .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#tfmvmixirp .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#tfmvmixirp .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#tfmvmixirp .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tfmvmixirp .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#tfmvmixirp .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#tfmvmixirp .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#tfmvmixirp .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#tfmvmixirp .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#tfmvmixirp .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#tfmvmixirp .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#tfmvmixirp .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#tfmvmixirp .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#tfmvmixirp .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#tfmvmixirp .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#tfmvmixirp .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#tfmvmixirp .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tfmvmixirp .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#tfmvmixirp .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#tfmvmixirp .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#tfmvmixirp .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tfmvmixirp .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#tfmvmixirp .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#tfmvmixirp .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tfmvmixirp .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tfmvmixirp .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#tfmvmixirp .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tfmvmixirp .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#tfmvmixirp .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tfmvmixirp .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#tfmvmixirp .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tfmvmixirp .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#tfmvmixirp .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tfmvmixirp .gt_left {\n  text-align: left;\n}\n\n#tfmvmixirp .gt_center {\n  text-align: center;\n}\n\n#tfmvmixirp .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#tfmvmixirp .gt_font_normal {\n  font-weight: normal;\n}\n\n#tfmvmixirp .gt_font_bold {\n  font-weight: bold;\n}\n\n#tfmvmixirp .gt_font_italic {\n  font-style: italic;\n}\n\n#tfmvmixirp .gt_super {\n  font-size: 65%;\n}\n\n#tfmvmixirp .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#tfmvmixirp .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#tfmvmixirp .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#tfmvmixirp .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#tfmvmixirp .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#tfmvmixirp .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#tfmvmixirp .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"term\">term</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"est\">est</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"OR\">OR</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"OR interpretation\">OR interpretation</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">(Intercept)</td>\n<td headers=\"est\" class=\"gt_row gt_right\">-1.25</td>\n<td headers=\"OR\" class=\"gt_row gt_right\">0.29</td>\n<td headers=\"OR interpretation\" class=\"gt_row gt_left\">estimated odds of an adolescent monkey solving an easy problem</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">difficultyeasy</td>\n<td headers=\"est\" class=\"gt_row gt_right\">0.86</td>\n<td headers=\"OR\" class=\"gt_row gt_right\">2.36</td>\n<td headers=\"OR interpretation\" class=\"gt_row gt_left\">odds of successful problem solving are more than halved (0.42 times the odds) when a given monkey moves from an easy to a difficult problem</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">statusdominant</td>\n<td headers=\"est\" class=\"gt_row gt_right\">0.67</td>\n<td headers=\"OR\" class=\"gt_row gt_right\">1.95</td>\n<td headers=\"OR interpretation\" class=\"gt_row gt_left\">odds of success would be almost doubled (1.95 times the odds) if a monkey were to change from adolescent to dominant status (NB this is non-significant)</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">statussubordinate</td>\n<td headers=\"est\" class=\"gt_row gt_right\">1.46</td>\n<td headers=\"OR\" class=\"gt_row gt_right\">4.30</td>\n<td headers=\"OR interpretation\" class=\"gt_row gt_left\">odds of success would quadruple (4.3 times the odds) if a monkey were to change from adolescent to subordinate status</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.column-margin}\n__Side note__  \n\nContrast this with what we would get from a _linear_ multilevel model. If we were instead modelling a \"problem score\" with `lmer()`, rather than \"solved yes/no\" with `glmer()`, our coefficients would be interpreted as the estimated difference in scores between adolescent and subordinate monkeys.  \n\nNote that estimating differences between groups is not quite the same idea as estimating the effect \"if a particular monkey changed from adolescent to subordinate\". In the linear world, these two things are the same, but our odds ratios give us only the latter. \n\n\n:::\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [
      "02b_log_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/panelset-0.2.6/panelset.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/panelset-0.2.6/panelset.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}