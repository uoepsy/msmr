{
  "hash": "9826f48125e37d5788dad575fc19f5d1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Week 4 Exercises: Nested and Crossed\"\nparams: \n    SHOW_SOLS: TRUE\n    TOGGLE: TRUE\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\n\n\n# Psychoeducation Treatment Effects\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n\n\n:::frame\n__Data: gadeduc.csv__\n\n\n\n\n\n\n\nThis is synthetic data from a randomised controlled trial, in which 30 therapists randomly assigned patients (each therapist saw between 2 and 28 patients) to a control or treatment group, and monitored their scores over time on a measure of generalised anxiety disorder (GAD7 - a 7 item questionnaire with 5 point likert scales).  \n\nThe control group of patients received standard sessions offered by the therapists. \nFor the treatment group, 10 mins of each sessions was replaced with a specific psychoeducational component, and patients were given relevant tasks to complete between each session. All patients had monthly therapy sessions. Generalised Anxiety Disorder was assessed at baseline and then every visit over 4 months of sessions (5 assessments in total).  \n\nThe data are available at [https://uoepsy.github.io/data/lmm_gadeduc.csv](https://uoepsy.github.io/data/lmm_gadeduc.csv){target=\"_blank\"}\n\nYou can find a data dictionary below:\n\n\n::: {#tbl-lmm_gadeduc.csv .cell layout-align=\"center\" tbl-cap='Data Dictionary: lmm_gadeduc.csv'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> variable </th>\n   <th style=\"text-align:left;\"> description </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> patient </td>\n   <td style=\"text-align:left;\"> A patient code in which the labels take the form &lt;Therapist initials&gt;_&lt;group&gt;_&lt;patient number&gt;. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> visit_0 </td>\n   <td style=\"text-align:left;\"> Score on the GAD7 at baseline </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> visit_1 </td>\n   <td style=\"text-align:left;\"> GAD7 at 1 month assessment </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> visit_2 </td>\n   <td style=\"text-align:left;\"> GAD7 at 2 month assessment </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> visit_3 </td>\n   <td style=\"text-align:left;\"> GAD7 at 3 month assessment </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> visit_4 </td>\n   <td style=\"text-align:left;\"> GAD7 at 4 month assessment </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n:::\n\n\n\n\n<div class='question-begin'>Question 1</div><div class='question-body'>\n\n\nUh-oh... these data aren't in the same shape as the other datasets we've been giving you..  \n\nCan you get it into a format that is ready for modelling?  \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\n- It's wide, and we want it long.  \n- Once it's long. \"visit_0\", \"visit_1\",.. needs to become the numbers 0, 1, ...\n- One variable (`patient`) contains lots of information that we want to separate out. There's a handy function in the __tidyverse__ called `separate()`, check out the help docs!  \n\n:::\n\n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-1' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-1', 'sol-start-1')\">  1 - reshaping</button></div><div class=\"solution-body\" id = \"sol-body-1\" style=\"display: none;\">\n\n\nHere's the data. We have one row per patient, but we have multiple observations for each patient across the columns..  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ngeduc = read_csv(\"https://uoepsy.github.io/data/lmm_gadeduc.csv\")\nhead(geduc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  patient      visit_0 visit_1 visit_2 visit_3 visit_4\n  <chr>          <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1 VC_Control_1      24      24      26      29      28\n2 VC_Control_2      24      26      28      29      30\n3 VC_Control_3      25      29      27      29      30\n4 VC_Control_4      24      25      25      26      26\n5 VC_Control_5      28      28      27      29      28\n6 VC_Control_6      26      28      25      27      28\n```\n\n\n:::\n:::\n\n\n\nWe can make it long by taking the all the columns from `visit_0` to `visit_4` and shoving their values into one variable, and keeping the name of the column they come from as another variable:  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ngeduc |> \n  pivot_longer(2:last_col(), names_to=\"visit\",values_to=\"GAD\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,410 × 3\n   patient      visit     GAD\n   <chr>        <chr>   <dbl>\n 1 VC_Control_1 visit_0    24\n 2 VC_Control_1 visit_1    24\n 3 VC_Control_1 visit_2    26\n 4 VC_Control_1 visit_3    29\n 5 VC_Control_1 visit_4    28\n 6 VC_Control_2 visit_0    24\n 7 VC_Control_2 visit_1    26\n 8 VC_Control_2 visit_2    28\n 9 VC_Control_2 visit_3    29\n10 VC_Control_2 visit_4    30\n# ℹ 2,400 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-2' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-2', 'sol-start-2')\">  2 - time is numeric</button></div><div class=\"solution-body\" id = \"sol-body-2\" style=\"display: none;\">\n\n\nNow we know how to get our data long, we need to sort out our time variable (`visit`) and make it into numbers.  \nWe can replace all occurrences of the string `\"visit_\"` with nothingness `\"\"`, and then convert them to numeric.  \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ngeduc |> \n  pivot_longer(2:last_col(), names_to=\"visit\",values_to=\"GAD\") |>\n  mutate(\n    visit = as.numeric(gsub(\"visit_\",\"\",visit))\n  ) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,410 × 3\n   patient      visit   GAD\n   <chr>        <dbl> <dbl>\n 1 VC_Control_1     0    24\n 2 VC_Control_1     1    24\n 3 VC_Control_1     2    26\n 4 VC_Control_1     3    29\n 5 VC_Control_1     4    28\n 6 VC_Control_2     0    24\n 7 VC_Control_2     1    26\n 8 VC_Control_2     2    28\n 9 VC_Control_2     3    29\n10 VC_Control_2     4    30\n# ℹ 2,400 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-3' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-3', 'sol-start-3')\">  3 - splitting up the patient variable</button></div><div class=\"solution-body\" id = \"sol-body-3\" style=\"display: none;\">\n\n\nFinally, we need to sort out the `patient` variable. It contains 3 bits of information that we will want to have separated out. It has the therapist (their initials), then the group (treatment or control), and then the patient number. These are all separated by an underscore \"_\".  \n\nThe `separate()` function takes a column and separates it into several things (as many things as we give it), splitting them by some user defined separator such as an underscore:  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ngeduc_long <- geduc |> \n  pivot_longer(2:last_col(), names_to=\"visit\",values_to=\"GAD\") |>\n  mutate(\n    visit = as.numeric(gsub(\"visit_\",\"\",visit))\n  ) |>\n  separate(patient, into=c(\"therapist\",\"group\",\"patient\"), sep=\"_\")\n```\n:::\n\n\n\nAnd we're ready to go!  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ngeduc_long\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,410 × 5\n   therapist group   patient visit   GAD\n   <chr>     <chr>   <chr>   <dbl> <dbl>\n 1 VC        Control 1           0    24\n 2 VC        Control 1           1    24\n 3 VC        Control 1           2    26\n 4 VC        Control 1           3    29\n 5 VC        Control 1           4    28\n 6 VC        Control 2           0    24\n 7 VC        Control 2           1    26\n 8 VC        Control 2           2    28\n 9 VC        Control 2           3    29\n10 VC        Control 2           4    30\n# ℹ 2,400 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n\n<div class='question-begin'>Question 2</div><div class='question-body'>\n\n\nVisualise the data. Does it look like the treatment had an effect?  \nDoes it look like it worked for every therapist?  \n\n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\n- remember, `stat_summary()` is very useful for aggregating data inside a plot.  \n\n:::\n\n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-4' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-4', 'sol-start-4')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-4\" style=\"display: none;\">\n\n\nHere's the overall picture. The average score on the GAD7 at each visit gets more and more different between the two groups. The treatment looks effective.. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(geduc_long, aes(x = visit, y = GAD, col = group)) +\n  stat_summary(geom=\"pointrange\")\n```\n\n::: {.cell-output-display}\n![](04exDORAIN_files/figure-html/unnamed-chunk-10-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\nLet's split this up by therapist, so we can see the averages across each therapist's set of patients.  \nThere's clear variability between therapists in how well the treatment worked. For instance, the therapists `EU` and `OD` don't seem to have much difference between their groups of patients.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(geduc_long, aes(x = visit, y = GAD, col = group)) +\n  stat_summary(geom=\"pointrange\") +\n  facet_wrap(~therapist)\n```\n\n::: {.cell-output-display}\n![](04exDORAIN_files/figure-html/unnamed-chunk-11-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n\n<div class='question-begin'>Question 3</div><div class='question-body'>\n\n\nFit a model to test if the psychoeducational treatment is associated with greater improvement in anxiety over time.  \n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-5' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-5', 'sol-start-5')\">  1 - fixed effects</button></div><div class=\"solution-body\" id = \"sol-body-5\" style=\"display: none;\">\n\n\n\nWe want to know if how anxiety (`GAD`) changes over time (`visit`) is different between treatment and control (`group`).  \n\nHopefully this should hopefully come as no surprise^[if it does, head back to where we learned about interactions in the single level regressions `lm()`. It's just the same here.] - it's an interaction!  \n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlmer(GAD ~ visit * group + ...\n       ...\n     data = geduc_long)\n```\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-6' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-6', 'sol-start-6')\">  2 - grouping structure</button></div><div class=\"solution-body\" id = \"sol-body-6\" style=\"display: none;\">\n\n\n\nWe have multiple observations for each of the 482 patients, and those patients are nested within 30 therapists.  \n\nNote that in our data, the patient variable does not uniquely specify the individual patients. i.e. patient \"1\" from therapist \"AO\" is a different person from patient \"1\" from therapist \"BJ\". To correctly group the observations into different patients (and not 'patient numbers'), we need to have `therapist:patient`.  \n\nSo we capture therapist-level differences in `( ... | therapist)` and the patients-within-therapist-level differences in `( ... | therapist:patient)`:  \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlmer(GAD ~ visit * group + ...\n       ( ... | therapist) + \n       ( ... | therapist:patient),\n     data = geduc_long)\n```\n:::\n\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-7' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-7', 'sol-start-7')\">  3 - random effects</button></div><div class=\"solution-body\" id = \"sol-body-7\" style=\"display: none;\">\n\n\n\nNote that each patient can change differently in their anxiety levels over time - i.e. the slope of `visit` could vary by participant.  \n\nLikewise, some therapists could have patients who change differently from patients from another therapist, so `visit|therapist` can be included.  \n\nEach patient is in one of the two groups - they're _either_ treatment _or_ control. So we can't say that \"differences in anxiety due to treatment varies between patients\", because for any one patient the \"difference in anxiety due to treatment\" is not defined in our study design.  \n\nHowever, therapists see multiple different patients, some of which are in the treatment group, and some of which are in the control group. So the treatment effect _could_ be different for different therapists!  \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmod1 <- lmer(GAD ~ visit*group + \n               (1+visit*group|therapist)+\n               (1+visit|therapist:patient),\n             geduc_long)\n```\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 4</div><div class='question-body'>\n\n\nFor each of the models below, what is wrong with the random effect structure?  \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmodelA <- lmer(GAD ~ visit*group + \n               (1+visit*group|therapist)+\n               (1+visit|patient),\n             geduc_long)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmodelB <- lmer(GAD ~ visit*group + \n               (1+visit*group|therapist/patient),\n             geduc_long)\n```\n:::\n\n\n\n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-8' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-8', 'sol-start-8')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-8\" style=\"display: none;\">\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmodelA <- lmer(GAD ~ visit*group + \n               (1+visit*group|therapist)+\n               (1+visit|patient),\n             geduc_long)\n```\n:::\n\n\n\nThe `patient` variable doesn't capture the different patients _within_ therapists, so this actually fits crossed random effects and treats all data where `patient==1` as from the same group (even if this includes several different patients' worth of data from different therapists!)\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmodelB <- lmer(GAD ~ visit*group + \n               (1+visit*group|therapist/patient),\n             geduc_long)\n```\n:::\n\n\n\nUsing the `/` here means we have the same random slopes fitted for therapists and for patients-within-therapists. but the effect of group can't vary by patient, so this doesn't work. hence why we need to split them up into `(...|therapist)+(...|therapist:patient)`.  \n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n\n<div class='question-begin'>Question 5</div><div class='question-body'>\n\n\nLet's suppose that I don't want the psychoeducation treatment, I just want the standard therapy sessions that the 'Control' group received. Which therapist should I go to?  \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\n`dotplot.ranef.mer()` might help here!  \nYou can read about `ranef` in [Chapter 2 #making-model-predictions](https://uoepsy.github.io/lmm/02_lmm.html#making-model-predictions){target=\"_blank\"}.  \n\n:::\n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-9' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-9', 'sol-start-9')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-9\" style=\"display: none;\">\n\n\nIt would be best to go to one of the therapists `SZ`, `YS`, or `IT`...  \n\nWhy? These therapists all have the most negative slope of visit:  \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndotplot.ranef.mer(ranef(mod1))$therapist\n```\n\n::: {.cell-output-display}\n![](04exDORAIN_files/figure-html/unnamed-chunk-19-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n\n<div class='question-begin'>Question 6</div><div class='question-body'>\n\n\nRecreate this plot.  \n\nThe faint lines represent the model estimated lines for each patient. The points and ranges represent our fixed effect estimates and their uncertainty.  \n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](04exDORAIN_files/figure-html/unnamed-chunk-20-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\n- you can get the patient-specific lines using `augment()` from the __broom.mixed__ package, and the fixed effects estimates using the __effects__ package. \n- remember that the \"patient\" column doesn't group observations into unique patients. \n- remember you can pull multiple datasets into ggplot:  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = dataset1, aes(x=x,y=y)) + \n  geom_point() + # points from dataset1\n  geom_line(data = dataset2) # lines from dataset2\n```\n:::\n\n\n- see more in [Chapter 2 #visualising-models](https://uoepsy.github.io/lmm/02_lmm.html#visualising-models){target=\"_blank\"}\n\n\n:::\n\n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-10' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-10', 'sol-start-10')\">  1 - the relevant parts</button></div><div class=\"solution-body\" id = \"sol-body-10\" style=\"display: none;\">\n\n\n\nThe __effects__ package will give us the fixed effect estimates: \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(effects)\nlibrary(broom.mixed)\neffplot <- effect(\"visit*group\",mod1) |>\n  as.data.frame()\n```\n:::\n\n\n\nWe want to get the fitted values for each patient. We can get fitted values using `augment()`. But the `patient` variable doesn't capture the _unique_ patients, it just captures their numbers (which aren't unique to each therapist).  \nSo we can create a new column called `upatient` which pastes together the therapists initials and the patient numbers\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\naugment(mod1) |> \n  mutate(\n    upatient = paste0(therapist,patient),\n    .after = patient # place the column next to the patient col\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,410 × 17\n     GAD visit group   therapist patient upatient .fitted .resid  .hat .cooksd\n   <dbl> <dbl> <fct>   <fct>     <fct>   <chr>      <dbl>  <dbl> <dbl>   <dbl>\n 1    24     0 Control VC        1       VC1         24.2 -0.198 0.454 0.0210 \n 2    24     1 Control VC        1       VC1         25.3 -1.28  0.239 0.239  \n 3    26     2 Control VC        1       VC1         26.4 -0.360 0.186 0.0128 \n 4    29     3 Control VC        1       VC1         27.4  1.56  0.294 0.508  \n 5    28     4 Control VC        1       VC1         28.5 -0.522 0.563 0.284  \n 6    24     0 Control VC        2       VC2         24.8 -0.843 0.454 0.383  \n 7    26     1 Control VC        2       VC2         26.2 -0.171 0.239 0.00426\n 8    28     2 Control VC        2       VC2         27.5  0.502 0.186 0.0250 \n 9    29     3 Control VC        2       VC2         28.8  0.174 0.294 0.00633\n10    30     4 Control VC        2       VC2         30.2 -0.153 0.563 0.0246 \n# ℹ 2,400 more rows\n# ℹ 7 more variables: .fixed <dbl>, .mu <dbl>, .offset <dbl>, .sqrtXwt <dbl>,\n#   .sqrtrwt <dbl>, .weights <dbl>, .wtres <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-11' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-11', 'sol-start-11')\">  2 - constructing the plot</button></div><div class=\"solution-body\" id = \"sol-body-11\" style=\"display: none;\">\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(effects)\nlibrary(broom.mixed)\neffplot <- effect(\"visit*group\",mod1) |>\n  as.data.frame()\n\naugment(mod1) |> \n  mutate(\n    upatient = paste0(therapist,patient),\n    .after = patient # place the column next to the patient col\n  ) |>\n  ggplot(aes(x=visit,y=.fitted,col=group))+\n  stat_summary(geom=\"line\", aes(group=upatient,col=group), alpha=.1)+\n  geom_pointrange(data=effplot, aes(y=fit,ymin=lower,ymax=upper,col=group))+\n  labs(x=\"- Month -\",y=\"GAD7\")\n```\n\n::: {.cell-output-display}\n![](04exDORAIN_files/figure-html/unnamed-chunk-24-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n<br>\n<div class=\"divider div-transparent div-dot\"></div>\n\n# Jokes\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n:::frame\n__Data: lmm_laughs.csv__  \n\n\n\n\n\n\n\nThese data are simulated to imitate an experiment that investigates the effect of visual non-verbal communication (i.e. gestures, facial expressions) on joke appreciation. \n90 Participants took part in the experiment, in which they each rated how funny they found a set of 30 jokes. For each participant, the order of these 30 jokes was randomly set for each run of the experiment. For each participant, the set of jokes was randomly split into two halves, with the first half being presented in audio-only, and the second half being presented in audio and video. This meant that each participant saw 15 jokes with video and 15 without, and each joke would be presented in with video roughly half of the times it was seen.  \n\nThe researchers want to investigate whether the delivery (audio/audiovideo) of jokes is associated with differences in humour-ratings.  \n\nData are available at [https://uoepsy.github.io/data/lmm_laughs.csv](https://uoepsy.github.io/data/lmm_laughs.csv){target=\"_blank\"}\n\n\n\n::: {#tbl-laughdict .cell layout-align=\"center\" tbl-cap='Data Dictionary: lmm_laughs.csv'}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"yqwhjvotop\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#yqwhjvotop table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#yqwhjvotop thead, #yqwhjvotop tbody, #yqwhjvotop tfoot, #yqwhjvotop tr, #yqwhjvotop td, #yqwhjvotop th {\n  border-style: none;\n}\n\n#yqwhjvotop p {\n  margin: 0;\n  padding: 0;\n}\n\n#yqwhjvotop .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#yqwhjvotop .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#yqwhjvotop .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#yqwhjvotop .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#yqwhjvotop .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#yqwhjvotop .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yqwhjvotop .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#yqwhjvotop .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#yqwhjvotop .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#yqwhjvotop .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#yqwhjvotop .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#yqwhjvotop .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#yqwhjvotop .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#yqwhjvotop .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#yqwhjvotop .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#yqwhjvotop .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#yqwhjvotop .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#yqwhjvotop .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#yqwhjvotop .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yqwhjvotop .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#yqwhjvotop .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#yqwhjvotop .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#yqwhjvotop .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yqwhjvotop .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#yqwhjvotop .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#yqwhjvotop .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yqwhjvotop .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yqwhjvotop .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#yqwhjvotop .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yqwhjvotop .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#yqwhjvotop .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yqwhjvotop .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#yqwhjvotop .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yqwhjvotop .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#yqwhjvotop .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yqwhjvotop .gt_left {\n  text-align: left;\n}\n\n#yqwhjvotop .gt_center {\n  text-align: center;\n}\n\n#yqwhjvotop .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#yqwhjvotop .gt_font_normal {\n  font-weight: normal;\n}\n\n#yqwhjvotop .gt_font_bold {\n  font-weight: bold;\n}\n\n#yqwhjvotop .gt_font_italic {\n  font-style: italic;\n}\n\n#yqwhjvotop .gt_super {\n  font-size: 65%;\n}\n\n#yqwhjvotop .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#yqwhjvotop .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#yqwhjvotop .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#yqwhjvotop .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#yqwhjvotop .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#yqwhjvotop .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#yqwhjvotop .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#yqwhjvotop .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#yqwhjvotop div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"variable\">variable</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"description\">description</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"variable\" class=\"gt_row gt_left\">ppt</td>\n<td headers=\"description\" class=\"gt_row gt_left\">Participant Identification Number</td></tr>\n    <tr><td headers=\"variable\" class=\"gt_row gt_left\">joke_label</td>\n<td headers=\"description\" class=\"gt_row gt_left\">Joke presented</td></tr>\n    <tr><td headers=\"variable\" class=\"gt_row gt_left\">joke_id</td>\n<td headers=\"description\" class=\"gt_row gt_left\">Joke Identification Number</td></tr>\n    <tr><td headers=\"variable\" class=\"gt_row gt_left\">delivery</td>\n<td headers=\"description\" class=\"gt_row gt_left\">Experimental manipulation: whether joke was presented in audio-only ('audio') or in audiovideo ('video')</td></tr>\n    <tr><td headers=\"variable\" class=\"gt_row gt_left\">rating</td>\n<td headers=\"description\" class=\"gt_row gt_left\">Humour rating chosen on a slider from 0 to 100</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n\n\n:::\n\n\n\n\n\n<div class='question-begin'>Question 7</div><div class='question-body'>\n\n\nPrior to getting hold of any data, we should be able to write out the structure of our ideal \"maximal\" model given that we have a description of the design of the study.  \n\nCan you do so?  \n\n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\nDon't know where to start? Try following the steps in [Chapter 8 #maximal-model](https://uoepsy.github.io/lmm/08_modelbuilding.html#maximal-model){target=\"_blank\"}.  \n\n:::\n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-12' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-12', 'sol-start-12')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-12\" style=\"display: none;\">\n\n\n\nWe want to estimate the effect of delivery on humour rating of jokes:  \n`rating ~ delivery`  \n\nWe have 30 observations for each participant. Participants are just another sampling unit here.  \n`rating ~ delivery + (1 | ppt)`  \n\nWe have 90 observations for each joke. We're not interested in specific jokes here, so we can think of these as a random set of experimental items that we might choose differently next time we conduct an experiment to assess delivery~rating:\n`rating ~ delivery + (1 | ppt) + (1 | joke_id)`  \n\nParticipants each see 15 jokes without video, and 15 with. The `delivery` variable is *\"within\"* participant. Some participants might respond differently when there is video (vs without) whereas some might not rate jokes any differently. The effect of delivery on rating might be *vary by participant*:  \n`rating ~ delivery + (1 + delivery | ppt) + (1 | joke_id)`  \n\nEach joke is presented both with and without the video. Some jokes might really benefit from gestures and facial expressions, whereas some might not. The effect of delivery on rating might be *vary by joke*:  \n`rating ~ delivery + (1 + delivery | ppt) + (1 + delivery | joke_id)`  \n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 8</div><div class='question-body'>\n\n\nRead in and clean the data (if necessary).  \n\nCreate some plots showing: \n\n1. the average rating for audio vs audio+video for each joke\n2. the average rating for audio vs audio+video for each participant\n\n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\n- you could use `facet_wrap`, or even `stat_summary`!  \n- you might want to use `joke_id`, rather than `joke_label` (the labels are very long!)\n\n:::\n\n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-13' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-13', 'sol-start-13')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-13\" style=\"display: none;\">\n\n\nHere is one using `facet_wrap`:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(laughs, aes(x = delivery, y = rating)) +\n  geom_boxplot()+\n  facet_wrap(~joke_id)\n```\n\n::: {.cell-output-display}\n![](04exDORAIN_files/figure-html/unnamed-chunk-28-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\nAnd one using `stat_summary()` for participants: \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(laughs, aes(x = delivery, y = rating)) +\n  stat_summary(geom=\"pointrange\", aes(group = ppt),\n               position = position_dodge(width=.2))+\n  stat_summary(geom=\"line\", aes(group = ppt),\n               position = position_dodge(width=.2))\n```\n\n::: {.cell-output-display}\n![](04exDORAIN_files/figure-html/unnamed-chunk-29-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n\n<div class='question-begin'>Question 9</div><div class='question-body'>\n\n\nFit an appropriate model to address the research aims of the study. \n\n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\nThis should be the one you came up with a couple of questions ago!\n:::\n\n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-14' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-14', 'sol-start-14')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-14\" style=\"display: none;\">\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmod <- lmer(rating ~ delivery + \n              (1 + delivery | joke_id) +\n              (1 + delivery| ppt), data = laughs)\n```\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 10</div><div class='question-body'>\n\n\nWhich joke is funniest when presented just in audio? For which joke does the video make the most difference to ratings?  \n\n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\nThese can all be answered by examining the random effects with `ranef()`.  \nSee [Chapter 2 #making-model-predictions](https://uoepsy.github.io/lmm/02_lmm.html#making-model-predictions){target=\"_blank\"}.  \n\nIf you're using `joke_id`, can you find out the actual joke that these correspond to?\n:::\n\n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-15' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-15', 'sol-start-15')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-15\" style=\"display: none;\">\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndotplot.ranef.mer(ranef(mod))$joke_id\n```\n\n::: {.cell-output-display}\n![](04exDORAIN_files/figure-html/unnamed-chunk-31-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\nJoke 19 is the funniest apparently! (not sure I agree)\n\nLots of ways to find what the joke actually is. Here is one way:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlaughs |> count(joke_id, joke_label) |>\n  filter(joke_id==19) |>\n  pull(joke_label)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"How many psychiatrists does it take to change a lightbulb? Just one, but the lightbulb really has to want to change.\"\n```\n\n\n:::\n:::\n\n\n\n\nAnd from the plot above, Joke 28 has the most benefit of video. \nWe can quickly check this with something like:  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nranef(mod)$joke_id |>\n  filter(deliveryvideo == max(deliveryvideo))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   (Intercept) deliveryvideo\n28   0.8070427      3.373723\n```\n\n\n:::\n:::\n\n\n\nThe joke itself is a bit weird.. maybe the video really helped!  \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlaughs |> count(joke_id, joke_label) |>\n  filter(joke_id==28) |>\n  pull(joke_label)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"An Alsatian went to a telegram office, took out a blank form and wrote:\\n\\\"Woof. Woof. Woof. Woof. Woof. Woof. Woof. Woof. Woof.\\\"\\nThe clerk examined the paper and politely told the dog: \\\"There are only nine\\nwords here. You could send another \\x91Woof' for the same price.\\\"\\n\\\"But,\\\" the dog replied, \\\"that would make no sense at all.\\\"\"\n```\n\n\n:::\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 11</div><div class='question-body'>\n\n\nDo jokes that are rated funnier when presented in audio-only tend to also benefit more from the addition of video?  \n\n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\nThink careful about this question. The random effects show us that jokes vary in their intercepts (ratings in audio-only) and in their effects of delivery (the random slopes). We want to know if these are related..  \n\n:::\n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-16' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-16', 'sol-start-16')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-16\" style=\"display: none;\">\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nVarCorr(mod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Groups   Name          Std.Dev. Corr  \n ppt      (Intercept)   3.5095         \n          deliveryvideo 1.7828   -0.002\n joke_id  (Intercept)   2.1479         \n          deliveryvideo 2.2420   0.390 \n Residual               5.8336         \n```\n\n\n:::\n:::\n\n\nIt's the correlation here that tell us - jokes rated higher in the audio-only tend to have a bigger effect of the video. \n\nWe can see this in a plot if we like. Here every dot is a joke, and the x-axis shows whether it is above or below the average rating for audio-only (the intercept). The y-axis shows whether it is above or below the average effect of video. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nplot(ranef(mod)$joke)\n```\n\n::: {.cell-output-display}\n![](04exDORAIN_files/figure-html/unnamed-chunk-36-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 12</div><div class='question-body'>\n\n\nCreate a plot of the estimated effect of video on humour-ratings. Try to plot not only the fixed effects, but the raw data too.  \n\n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\nSee e.g. [Chapter 2 #visualising-models](https://uoepsy.github.io/lmm/02_lmm.html#visualising-models){target=\"_blank\"}\n\n:::\n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-17' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-17', 'sol-start-17')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-17\" style=\"display: none;\">\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(effects)\n\nplotdatf <- effect(\"delivery\",mod) |>\n  as.data.frame()\n\nggplot(data = laughs, aes(x = delivery)) +\n  geom_jitter(aes(y = rating), width = .1, height = 0, alpha = .1) +\n  geom_pointrange(data = plotdatf,\n                  aes(y = fit, ymin = lower, ymax = upper),\n                  position=position_nudge(x=.2))\n```\n\n::: {.cell-output-display}\n![](04exDORAIN_files/figure-html/unnamed-chunk-37-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n<br>\n<div class=\"divider div-transparent div-dot\"></div>\n\n# Optional Extra: Vocab Development\n\n:::frame\n__Data: pvt_bilingual.csv__ \n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n494 children from 30 schools were included in the study. Children were assessed on a yearly basis for 7 years throughout primary school on a measure of vocabulary administered in English, the Picture Vocab Test (PVT). 301 were monolingual English speakers, and 193 were bilingual (english + another language). \n\nPrevious research conducted on monolingual children has suggested that that scores on the PVT increase steadily up until the age of approximately 7 or 8 at which point they begin to plateau. The aim of the present study is to investigate differences in the development of vocabulary between monolingual and bilingual children.  \n\nThe data are available at [https://uoepsy.github.io/data/pvt_bilingual.csv](https://uoepsy.github.io/data/pvt_bilingual.csv).  \n\n\n\n::: {#tbl-pvtdict .cell layout-align=\"center\" tbl-cap='Data Dictionary: pvt_bilingual.csv'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> variable </th>\n   <th style=\"text-align:left;\"> description </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> child </td>\n   <td style=\"text-align:left;\"> Child's name </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> school </td>\n   <td style=\"text-align:left;\"> School Identifier </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> isBilingual </td>\n   <td style=\"text-align:left;\"> Binary variable indicating whether the child is monolingual (0) or bilingual (1) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> age </td>\n   <td style=\"text-align:left;\"> Age (years) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PVT </td>\n   <td style=\"text-align:left;\"> Score on the Picture Vocab Test (PVT). Scores range 0 to 60 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n:::\n\n\n\n<div class='question-begin'>Question 13 - Less Guided</div><div class='question-body'>\n\n\nConduct an analysis to estimate the differences in trajectories of vocabulary development between monolingual and bilingual children over the course of primary school. \n\nIf you can, try writing up your results!  \n\n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\n1. always plot your data!\n2. read the study background: \"increase steadily ... before beginning to plateau\" describes a _curve_!  \n3. plotting the data can give an initial sense of the possible need for higher order polynomials.  \n4. multiple observations for each child. multiple children in each school.. \n\n:::\n\n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-18' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-18', 'sol-start-18')\">  1 - initial data checks</button></div><div class=\"solution-body\" id = \"sol-body-18\" style=\"display: none;\">\n\n\n\nLet's read in the data:  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npvt <- read_csv(\"https://uoepsy.github.io/data/pvt_bilingual.csv\")\nhead(pvt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  child   school   isBilingual   age   PVT\n  <chr>   <chr>          <dbl> <dbl> <dbl>\n1 Gabriel School 1           0     4    20\n2 Gabriel School 1           0     5    21\n3 Gabriel School 1           0     6    22\n4 Gabriel School 1           0     7    24\n5 Gabriel School 1           0     8    38\n6 Gabriel School 1           0     9    39\n```\n\n\n:::\n:::\n\n\nFirst, we're going to want `isBilingual` to be a factor, because the 1s and 0s are categories, not numbers. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npvt <- pvt |> mutate(isBilingual = factor(isBilingual))\n```\n:::\n\n\n\n\nWe have 30 distinct schools:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nn_distinct(pvt$school)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 30\n```\n\n\n:::\n:::\n\n\n\nAnd 418 distinct children. Is that right?  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nn_distinct(pvt$child)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 418\n```\n\n\n:::\n:::\n\n\n\nGiven that the `pvt$child` variable is just the first name of the child, it's entirely likely that there will be, for instance more than one \"Martin\".  \n\nThis says that there are 487!  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npvt |> count(school, child) |> nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 487\n```\n\n\n:::\n:::\n\n\n\nBut wait... we could _still_ have issues. What if there were 2 \"Martin\"s at the same school??\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npvt |> \n  # count the school-children groups\n  count(school, child) |> \n  # arrange the output so that the highest \n  # values of the 'n' column are at the top\n  arrange(desc(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 487 × 3\n   school    child        n\n   <chr>     <chr>    <int>\n 1 School 14 James       14\n 2 School 14 Michelle    14\n 3 School 15 Michael     14\n 4 School 21 Daniel      14\n 5 School 3  Jackson     14\n 6 School 5  Raven       14\n 7 School 9  Kaamil      14\n 8 School 1  Allyssa      7\n 9 School 1  Armon        7\n10 School 1  Dakota       7\n# ℹ 477 more rows\n```\n\n\n:::\n:::\n\n\n\nAha! There are 7 cases where schools have two children of the same name. Remember that each child was measured at 7 timepoints. We shouldn't have people with 14!  \n\nIf we actually _look_ at the data, we'll see that it is very neatly organised, with each child's data together. This means that we could feasibly make an educated guess that, e.g., the \"Jackson\" from \"School 3\" in rows 155-161 is different from the \"Jackson\" from \"School 3\" at rows 190-196. \n\nBecause of the ordering of our data, we can do something like this:  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npvt <- \n  pvt |>\n  # group by the school and child\n  group_by(school, child) |>\n  mutate(\n    # make a new variable which counts from 1 to \n    # the number of rows for each school-child\n    n_obs = 1:n()\n  ) |>\n  # ungroup the data\n  ungroup() |>\n  mutate(\n    # change it so that if the n_obs is >7, the \n    # child becomes \"[name] 2\", to indicate they're the second\n    # child with that name\n    child = ifelse(n_obs>7, paste0(child,\" 2\"), child)\n  )\n```\n:::\n\n\n\nNow we have 494!  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npvt |> count(school, child) |> nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 494\n```\n\n\n:::\n:::\n\n\n\nAnd nobody has anything other than 7 observations!\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npvt |> count(school, child) |>\n  filter(n != 7)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 3\n# ℹ 3 variables: school <chr>, child <chr>, n <int>\n```\n\n\n:::\n:::\n\n\n\nPhew!  \n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-19' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-19', 'sol-start-19')\">  2 - exploratory plots and descriptives</button></div><div class=\"solution-body\" id = \"sol-body-19\" style=\"display: none;\">\n\n\n\nHow many bilingual children?  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npvt |> group_by(isBilingual) |>\n  summarise(nchild = n_distinct(child))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  isBilingual nchild\n  <fct>        <int>\n1 0              272\n2 1              178\n```\n\n\n:::\n:::\n\n\n\nHow many children (mono/bilingual) in each school? \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npvt |> group_by(school, isBilingual) |>\n  summarise(nchild = n_distinct(child)) |>\n  ggplot(aes(y=school,x=nchild,fill=isBilingual))+\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](04exDORAIN_files/figure-html/unnamed-chunk-50-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n\nOkay, let's just fit an intercept-only model:  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npvt_null <- lmer(PVT ~ 1 + \n                   (1 | school) +\n                   (1 | school:child), data = pvt)\nsummary(pvt_null)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear mixed model fit by REML ['lmerMod']\nFormula: PVT ~ 1 + (1 | school) + (1 | school:child)\n   Data: pvt\n\nREML criterion at convergence: 23844.1\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.7768 -0.5984  0.0068  0.5744  4.1806 \n\nRandom effects:\n Groups       Name        Variance Std.Dev.\n school:child (Intercept) 33.48    5.786   \n school       (Intercept) 19.76    4.445   \n Residual                 43.59    6.602   \nNumber of obs: 3458, groups:  school:child, 494; school, 30\n\nFixed effects:\n            Estimate Std. Error t value\n(Intercept)  27.5263     0.8667   31.76\n```\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n\nAs we can see from `summary(pvt_null)`, the random intercept variances are 33.48 for child-level, 19.76 for school-level, and the residual variance is 43.59.\n\nSo child level differences account for $\\frac{33.48}{33.48 + 19.76 + 43.59} = 0.35$ of the variance in PVT scores, and child & school differences together account for $\\frac{33.48 + 19.76}{33.48 + 19.76 + 43.59} = 0.55$ of the variance.\n\nHere's an initial plot too:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(pvt, aes(x=age,y=PVT,col=factor(isBilingual)))+\n  stat_summary(geom=\"pointrange\")+\n  stat_summary(geom=\"line\")\n```\n\n::: {.cell-output-display}\n![](04exDORAIN_files/figure-html/unnamed-chunk-53-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-20' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-20', 'sol-start-20')\">  3 - modelling</button></div><div class=\"solution-body\" id = \"sol-body-20\" style=\"display: none;\">\n\n\n\nI feel like either raw or orthogonal polynomials would be fine here - there's nothing explicit from the study background about stuff \"at baseline\". There's the stuff about the plateau at 7 or 8, but we can get that from the model plots. Orthogonal will allow us to compare the trajectories overall (their linear trend, the 'curviness' and 'wiggliness').  \n\nAn additional benefit of orthogonal polynomials is that we are less likely to get singular fits when we include polynomial terms in our random effects. Remember, raw polynomials are correlated, so often the by-participant variances in raw poly terms are highly correlated. \n\nI've gone for 3 degrees of polynomials here because the plot above shows a bit of an S-shape for the bilinguals. \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npvt <- pvt |> mutate(\n  poly1 = poly(age, 3)[,1],\n  poly2 = poly(age, 3)[,2],\n  poly3 = poly(age, 3)[,3],\n)\n```\n:::\n\n\n\nThese models do not converge.  \nI've tried to preserve the by-child random effects of time, because while I think Schools probably _do_ vary, all the schools teach the same curriculum, whereas there's _a lot_ of varied things that can influence a child's vocabulary, both in and out of school.    \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmod1 <- lmer(PVT ~ 1 + (poly1 + poly2 + poly3) * isBilingual + \n       (1 + (poly1 + poly2 + poly3)*isBilingual | school) + \n       (1 + (poly1 + poly2 + poly3) | school:child),\n     data = pvt)\n\nmod2 <- lmer(PVT ~ 1 + (poly1 + poly2 + poly3) * isBilingual + \n       (1 + isBilingual * (poly1 + poly2) + poly3 | school) +\n       (1 + (poly1 + poly2 + poly3) | school:child),\n     data = pvt)\n\nmod3 <- lmer(PVT ~ 1 + (poly1 + poly2 + poly3) * isBilingual + \n       (1 + isBilingual * poly1 + poly2 + poly3 | school) +\n       (1 + (poly1 + poly2 + poly3) | school:child),\n     data = pvt)\n\nmod4 <- lmer(PVT ~ 1 + (poly1 + poly2 + poly3) * isBilingual + \n       (1 + isBilingual + poly1 + poly2 + poly3 | school) +\n       (1 + (poly1 + poly2 + poly3) | school:child),\n     data = pvt)\n\nmod5 <- lmer(PVT ~ 1 + (poly1 + poly2 + poly3) * isBilingual + \n       (1 + isBilingual + poly1 + poly3 | school) +\n       (1 + (poly1 + poly2 + poly3) | school:child),\n     data = pvt)\n# relative to the variance in time slopes, there's v little by-school variance in bilingual differences in vocab\n\nmod6 <- lmer(PVT ~ 1 + (poly1 + poly2 + poly3) * isBilingual + \n       (1 + poly1 + poly2 +  poly3 | school) +\n       (1 + (poly1 + poly2 + poly3) | school:child),\n     data = pvt)\n# looks like curvature doesn't vary between schools much as linear and wiggliness \n```\n:::\n\n\n\nthis one converges! \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmod7 <- lmer(PVT ~ 1 + (poly1 + poly2 + poly3) * isBilingual + \n       (1 + poly1 + poly3 | school) +\n       (1 + (poly1 + poly2 + poly3) | school:child),\n     data = pvt)\n```\n:::\n\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-21' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-21', 'sol-start-21')\">  4 - model plots</button></div><div class=\"solution-body\" id = \"sol-body-21\" style=\"display: none;\">\n\n\n\nLet's plot the predictions: \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(broom.mixed)\naugment(mod7) |> \n  mutate(\n    poly1 = round(poly1, 3) # because of rounding errors that make plot weird\n  ) |>\n  ggplot(aes(x=poly1,col=isBilingual))+\n  stat_summary(geom=\"pointrange\",aes(y=PVT))+\n  stat_summary(geom=\"line\", aes(y=.fitted))\n```\n\n::: {.cell-output-display}\n![](04exDORAIN_files/figure-html/unnamed-chunk-57-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\nRemember that these are just the average of all model fitted values. Because everyone has complete data here, we can use these to visualise our model estimates without worrying about them being distorted by missing data. Just like the fixed effects themselves though, all this is focussed on \"the average child from the average school\". The plot hides a lot of the *variability* that we have actually modelled. \nFor instance, consider how our view changes when we add in the individual lines for each child (below). The lines for the average child are just the same as above, but we can now see just how much children vary. \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\naugment(mod7) |> \n  mutate(\n    poly1 = round(poly1, 3) \n  ) |>\n  ggplot(aes(x=poly1,col=isBilingual))+\n  # make a line for each \"school-child\" group: \n  geom_line(aes(group=interaction(school,child),\n                y=.fitted),alpha=.1)+\n  stat_summary(geom=\"pointrange\",aes(y=PVT))+\n  stat_summary(geom=\"line\", aes(y=.fitted))\n```\n\n::: {.cell-output-display}\n![](04exDORAIN_files/figure-html/unnamed-chunk-58-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n  \nLet's refit our model with lmerTest:  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmod7 <- lmerTest::lmer(PVT ~ 1 + (poly1 + poly2 + poly3) * isBilingual + \n       (1 + poly1 + poly3 | school) +\n       (1 + (poly1 + poly2 + poly3) | school:child),\n     data = pvt)\n\nsummary(mod7)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: PVT ~ 1 + (poly1 + poly2 + poly3) * isBilingual + (1 + poly1 +  \n    poly3 | school) + (1 + (poly1 + poly2 + poly3) | school:child)\n   Data: pvt\n\nREML criterion at convergence: 23076.6\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-4.4457 -0.5499 -0.0004  0.5261  4.4194 \n\nRandom effects:\n Groups       Name        Variance Std.Dev. Corr             \n school:child (Intercept)   34.86   5.904                    \n              poly1       1842.60  42.926    0.01            \n              poly2       3945.86  62.816   -0.08  0.23      \n              poly3        684.38  26.161    0.19  0.61  0.87\n school       (Intercept)   19.97   4.468                    \n              poly1        928.32  30.468   -0.40            \n              poly3        335.59  18.319   -0.52 -0.12      \n Residual                   31.93   5.651                    \nNumber of obs: 3458, groups:  school:child, 494; school, 30\n\nFixed effects:\n                    Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)          27.9464     0.8987   31.1128  31.098  < 2e-16 ***\npoly1               157.0421     9.5750   39.5964  16.401  < 2e-16 ***\npoly2               -48.9606     8.0944  517.6541  -6.049 2.80e-09 ***\npoly3                -1.2793     8.1739   61.5750  -0.157  0.87614    \nisBilingual1         -1.2113     0.5863  465.7927  -2.066  0.03939 *  \npoly1:isBilingual1   16.6104    12.3121  501.9133   1.349  0.17791    \npoly2:isBilingual1   56.2609    12.9500  517.6541   4.344 1.68e-05 ***\npoly3:isBilingual1  -34.3286    11.8629 1217.8366  -2.894  0.00387 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) poly1  poly2  poly3  isBln1 pl1:B1 pl2:B1\npoly1       -0.215                                          \npoly2       -0.013  0.026                                   \npoly3       -0.184 -0.003  0.072                            \nisBilingul1 -0.250 -0.001  0.020 -0.020                     \nply1:sBlng1  0.000 -0.500 -0.020 -0.022 -0.001              \nply2:sBlng1  0.008 -0.016 -0.625 -0.045 -0.033  0.033       \nply3:sBlng1 -0.009 -0.020 -0.050 -0.566  0.034  0.038  0.079\n```\n\n\n:::\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-22' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-22', 'sol-start-22')\">  5 - model interpretation</button></div><div class=\"solution-body\" id = \"sol-body-22\" style=\"display: none;\">\n\n\n\nThe exact value of the coefficients here don't really give us anything meaningful. Note that in our plots above, the x-axis is \"poly1\", which is some weirdly re-scaled version of \"age\", so these coefficients represent things like the estimated change in PVT when \"moving up 1 in poly1\". But these units are not remotely useful to us. Even if we wanted to try and scale back to get out something we could interpret in terms of years of age, the whole point of non-linear change is that we can't just say \"PVT increases by $b$ with every extra year of age\", because we need to consider the higher order polynomial terms.  \n\nThe long and the short of it is that while the numbers don't really matter here, the sign (+ or -) and the significance _does_ tell us stuff:  \n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"nzixjqysxv\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#nzixjqysxv table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#nzixjqysxv thead, #nzixjqysxv tbody, #nzixjqysxv tfoot, #nzixjqysxv tr, #nzixjqysxv td, #nzixjqysxv th {\n  border-style: none;\n}\n\n#nzixjqysxv p {\n  margin: 0;\n  padding: 0;\n}\n\n#nzixjqysxv .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#nzixjqysxv .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#nzixjqysxv .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#nzixjqysxv .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#nzixjqysxv .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#nzixjqysxv .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nzixjqysxv .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#nzixjqysxv .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#nzixjqysxv .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#nzixjqysxv .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#nzixjqysxv .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#nzixjqysxv .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#nzixjqysxv .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#nzixjqysxv .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#nzixjqysxv .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#nzixjqysxv .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#nzixjqysxv .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#nzixjqysxv .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#nzixjqysxv .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nzixjqysxv .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#nzixjqysxv .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#nzixjqysxv .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#nzixjqysxv .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nzixjqysxv .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#nzixjqysxv .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#nzixjqysxv .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nzixjqysxv .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nzixjqysxv .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#nzixjqysxv .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nzixjqysxv .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#nzixjqysxv .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nzixjqysxv .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#nzixjqysxv .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nzixjqysxv .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#nzixjqysxv .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nzixjqysxv .gt_left {\n  text-align: left;\n}\n\n#nzixjqysxv .gt_center {\n  text-align: center;\n}\n\n#nzixjqysxv .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#nzixjqysxv .gt_font_normal {\n  font-weight: normal;\n}\n\n#nzixjqysxv .gt_font_bold {\n  font-weight: bold;\n}\n\n#nzixjqysxv .gt_font_italic {\n  font-style: italic;\n}\n\n#nzixjqysxv .gt_super {\n  font-size: 65%;\n}\n\n#nzixjqysxv .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#nzixjqysxv .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#nzixjqysxv .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#nzixjqysxv .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#nzixjqysxv .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#nzixjqysxv .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#nzixjqysxv .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#nzixjqysxv .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#nzixjqysxv div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"term\">term</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"est\">est</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"p\">p</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"interpretation\">interpretation</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">(Intercept)</td>\n<td headers=\"est\" class=\"gt_row gt_right\">27.95</td>\n<td headers=\"p\" class=\"gt_row gt_right\">*</td>\n<td headers=\"interpretation\" class=\"gt_row gt_left\">average vocab score at the mean age (for monolingual)</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">poly1</td>\n<td headers=\"est\" class=\"gt_row gt_right\">157.04</td>\n<td headers=\"p\" class=\"gt_row gt_right\">*</td>\n<td headers=\"interpretation\" class=\"gt_row gt_left\">vocab increases over time (for monolingual children)</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">poly2</td>\n<td headers=\"est\" class=\"gt_row gt_right\">-48.96</td>\n<td headers=\"p\" class=\"gt_row gt_right\">*</td>\n<td headers=\"interpretation\" class=\"gt_row gt_left\">the increase in vocab becomes more gradual (for monolingual children)</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">poly3</td>\n<td headers=\"est\" class=\"gt_row gt_right\">-1.28</td>\n<td headers=\"p\" class=\"gt_row gt_right\"></td>\n<td headers=\"interpretation\" class=\"gt_row gt_left\">no significant wiggliness to vocab trajectory of the average monolingual child</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">isBilingual1</td>\n<td headers=\"est\" class=\"gt_row gt_right\">-1.21</td>\n<td headers=\"p\" class=\"gt_row gt_right\">*</td>\n<td headers=\"interpretation\" class=\"gt_row gt_left\">average vocab score at mean age is lower for bilingual vs monolingual children</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">poly1:isBilingual1</td>\n<td headers=\"est\" class=\"gt_row gt_right\">16.61</td>\n<td headers=\"p\" class=\"gt_row gt_right\"></td>\n<td headers=\"interpretation\" class=\"gt_row gt_left\">no significant difference in linear trend of vocab for bilingual vs monolingual</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">poly2:isBilingual1</td>\n<td headers=\"est\" class=\"gt_row gt_right\">56.26</td>\n<td headers=\"p\" class=\"gt_row gt_right\">*</td>\n<td headers=\"interpretation\" class=\"gt_row gt_left\">curvature for vocab trajectory of bilingual children significantly differs from that of monolinguals</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">poly3:isBilingual1</td>\n<td headers=\"est\" class=\"gt_row gt_right\">-34.33</td>\n<td headers=\"p\" class=\"gt_row gt_right\">*</td>\n<td headers=\"interpretation\" class=\"gt_row gt_left\">wiggliness for vocab trajectory of bilingual children significantly differs from that of monolinguals</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\nFrom the random effects, we get even more information! All this stuff is kind of \"added context\" for the conclusions (which will come from our fixed effects).  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nVarCorr(mod7)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Groups       Name        Std.Dev. Corr                \n school:child (Intercept)  5.9043                      \n              poly1       42.9256   0.005              \n              poly2       62.8161  -0.078  0.227       \n              poly3       26.1606   0.191  0.609  0.871\n school       (Intercept)  4.4683                      \n              poly1       30.4683  -0.403              \n              poly3       18.3190  -0.524 -0.116       \n Residual                  5.6510                      \n```\n\n\n:::\n:::\n\n\nSchool's vary in the average child vocab score at mean age with an SD of 4.5. Schools with higher vocab scores at the mean age tend to have lower linear increase. Within schools, children vary in the vocab scores at mean age with an SD of 5.9. Children with steeper linear increase in vocab tend to have less curvature. \n\n\n\n\n<!-- ::: {.callout-caution collapse=\"true\"} -->\n<!-- #### optional extra: plotting uncertainty of fixed effects -->\n\n<!-- We've seen a few times that taking all the fitted values and averaging can give us the trajectories. But we've also seen that this can cause issues if we have missing data, or unbalanced designs. We have also had to use things like the __effects__ package to show uncertainty in the fixed effects estimates, because this is not the same as the standard errors around the average fitted values.   -->\n\n<!-- Another option instead of the __effects__ package (harder to make work with polynomials), is to use lots and lots of predictions from the model.   -->\n\n<!-- In USMR, we often visualised our model in a 3 step process: -->\n\n<!-- 1. make a little dataframe across the values that we want to plot -->\n<!-- 2. use `broom::augment(model, newdata = plotdata, interval = \"confidence\")` to add some predictions and confidence intervals.   -->\n<!-- 3. plot!   -->\n\n<!-- We can use this same logic in multilevel models, but step 2 is a little different.   -->\n\n\n<!-- First we make a little dataframe.   -->\n<!-- Because the actual estimation of orthogonal polynomials can depend on the number of values we're putting in (`poly(4:10, 2)` does not give the same scaling as `poly(c(4:10,4:10),2)`), it's best to just capture the polynomials that we actually fitted our model to.   -->\n<!-- So here we get the first 7 rows of each poly1, because those correspond to our polynomials that we fitted the model to.   -->\n<!-- ```{r} -->\n<!-- plotdat <- -->\n<!--   tibble( -->\n<!--     age = 4:10, -->\n<!--     poly1 = pvt$poly1[1:7], -->\n<!--     poly2 = pvt$poly2[1:7], -->\n<!--     poly3 = pvt$poly3[1:7], -->\n<!--     isBilingual = \"0\", -->\n<!--     school = \".\", -->\n<!--     child = \".\" -->\n<!--   ) -->\n<!-- ``` -->\n\n<!-- We're going to have to give it _some_ values for `school` and for `child`, but we don't want to predict for any specific school or child that is in our dataset.  -->\n<!-- By setting these to something like \".\", that doesn't occur in our data, we can estimate based on the fixed coefficients only.   -->\n\n<!-- Note that currently `isBilingual` is set to 0, but we want to plot for the bilinguals too, so we'll need to duplicate our `plotdat` object:    -->\n<!-- ```{r} -->\n<!-- plotdat <- -->\n<!--   bind_rows( -->\n<!--     plotdat, -->\n<!--     plotdat |> mutate(isBilingual=1) -->\n<!--   ) -->\n<!-- ``` -->\n\n<!-- Finally, the __merTools__ package has the `predictInterval` function that can get us some intervals   -->\n<!-- ```{r} -->\n<!-- library(merTools) -->\n\n<!-- bind_cols( -->\n<!--   plotdat,  -->\n<!--   predictInterval(merMod = mod7, newdata = plotdat, -->\n<!--                   level = 0.95, n.sims = 2000, -->\n<!--                   include.resid.var = FALSE) -->\n<!--           ) |> -->\n<!--   ggplot(aes(x=poly1,y=fit,ymin=lwr,ymax=upr, -->\n<!--              col=isBilingual,fill=isBilingual))+ -->\n<!--   geom_line()+ -->\n<!--   geom_ribbon(alpha=.2) -->\n<!-- ``` -->\n\n<!-- ::: -->\n\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n<br>\n<div class=\"divider div-transparent div-dot\"></div>\n\n\n# Optional Extra: Test Enhanced Learning\n\n:::frame\n__Data: Test-enhanced learning__  \n\nAn experiment was run to conceptually replicate \"test-enhanced learning\" (Roediger & Karpicke, 2006): two groups of 25 participants were presented with material to learn. One group studied the material twice (`StudyStudy`), the other group studied the material once then did a test (`StudyTest`). Recall was tested immediately (one minute) after the learning session and one week later. The recall tests were composed of 175 items identified by a keyword (`Test_word`). \n\nThe critical (replication) prediction is that the `StudyStudy` group recall more items on the immediate test, but the `StudyTest` group will retain the material better and thus perform better on the 1-week follow-up test.  \n\nThe following code loads the data into your R environment by creating a variable called `tel`:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nload(url(\"https://uoepsy.github.io/data/testenhancedlearning.RData\"))\n```\n:::\n\n::: {#tbl-teldict .cell layout-align=\"center\" tbl-cap='Data Dictionary: testenhancedlearning.Rdata'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> variable </th>\n   <th style=\"text-align:left;\"> description </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Subject_ID </td>\n   <td style=\"text-align:left;\"> Unique Participant Identifier </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Group </td>\n   <td style=\"text-align:left;\"> Group denoting whether the participant studied the material twice (StudyStudy), or studied it once then did a test (StudyTest) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Delay </td>\n   <td style=\"text-align:left;\"> Time of recall test ('min' = Immediate, 'week' = One week later) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Test_word </td>\n   <td style=\"text-align:left;\"> Word being recalled (175 different test words) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Correct </td>\n   <td style=\"text-align:left;\"> Whether or not the word was correctly recalled </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Rtime </td>\n   <td style=\"text-align:left;\"> Time to recall word (milliseconds) </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n:::\n\n\n\n\n<div class='question-begin'>Question 14</div><div class='question-body'>\n\n\nLoad and plot the data. Does it look like the effect was replicated?  \n\n> The critical (replication) prediction is that the `StudyStudy` group recall more items on the immediate test, but the `StudyTest` group will retain the material better and thus perform better on the 1-week follow-up test.  \n\n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\nWe can actually look at this from a couple of different angles. The most obvious option is to take successful learning as \"correctly recalling\" an item. This means we take the `Correct` variable as our outcome.  \n\nNote we also have `Rtime` - the \"time-to-recall\" of an item. This could also work as an outcome, but note that it also includes the time it took participants to provide an incorrect response too. If this was your own project, you may well want to provide analyses of `Correct`, and then also of the time-taken, but on the subset of correctly recalled items.  \n\n:::\n\n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-23' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-23', 'sol-start-23')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-23\" style=\"display: none;\">\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nload(url(\"https://uoepsy.github.io/data/testenhancedlearning.RData\"))\n\nggplot(tel, aes(Delay, Correct, col=Group)) + \n  stat_summary(fun.data=mean_se, geom=\"pointrange\")+\n  theme_light()\n```\n\n::: {.cell-output-display}\n![](04exDORAIN_files/figure-html/unnamed-chunk-64-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\nThat looks like test-enhanced learning to me!  \n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 15</div><div class='question-body'>\n\n\n\nTest the critical hypothesis using a mixed-effects model.  \n\nFit the maximal random effect structure supported by the experimental design. Simplify the random effect structure until you reach a model that converges.  \n\n__Note:__ Some of the models you attempt here might take time to fit. This is normal, and you can cancel the estimation at any time by pressing the escape key.  \nI suggest that you write your initial model, set it running, and then look at the first solution to see if it converged for me. You can assume that if it didn't work for me, it also won't work for you. I've shown the random effects for each model, in case it helps in deciding your next step.  \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\nWhat we're aiming to do here is to follow [Barr et al.'s](https://doi.org/10.1016/j.jml.2012.11.001) advice of defining our maximal model and then removing only the terms to allow a non-singular fit.  \n\n+ What kind of model will you use? What is our outcome? is it binary, or continuous? \n+ We can expect variability across subjects (some people are better at learning than others) and across items (some of the recall items are harder than others). How should this be represented in the random effects?\n\n:::\n\n\n\n</div><p class=\"question-end\"></p>\n\n \n\n\n<div class=\"solution-begin\"><button id='sol-start-24' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-24', 'sol-start-24')\">  1 - maximal model</button></div><div class=\"solution-body\" id = \"sol-body-24\" style=\"display: none;\">\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\nWe have a __crossed__ random effect structure here. Each participant was tested on every word, and each word was seen by every participant.  \n\nSubjects were tested at both the `min` and `week`, so `Delay|Subject_ID` can be included (some people might retain the items better than others).  \nLikewise the words were seen at both `min` and `week`, and some words might be more easy to retain than others (`Delay|Test_word`).  \n\nThe participants are in either one group or another, so we can't have `Group|Subject_ID`. However, the words were seen by people in both groups, so we _can_ have `Group|Test_word`.  \n\nThis one took my computer about 6 minutes.  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmod1 <- glmer(Correct ~ Delay*Group +\n             (1 + Delay | Subject_ID) +\n             (1 + Delay * Group | Test_word),\n             family=binomial, data=tel)\n```\n:::\n\n\n<p style=\"color:red;font-size:.8em\">\nWarning message:<br>\nIn checkConv(attr(opt, \"derivs\"), opt\\$par, ctrl = control\\$checkConv,  :<br>\n  Model failed to converge with max|grad| = 0.0184773 (tol = 0.002, component 1)\n</p>\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nVarCorr(mod1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Groups     Name                     Std.Dev. Corr                \n Test_word  (Intercept)              1.057208                     \n            Delayweek                0.059611 -0.341              \n            GroupStudyTest           0.067625 -0.835  0.802       \n            Delayweek:GroupStudyTest 0.115439 -0.783  0.852  0.996\n Subject_ID (Intercept)              1.594518                     \n            Delayweek                0.210026 -0.623              \n```\n\n\n:::\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-25' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-25', 'sol-start-25')\">  2 - Removing Delay*Group|Test_word</button></div><div class=\"solution-body\" id = \"sol-body-25\" style=\"display: none;\">\n\n\n\nLets remove the interaction in the by-word random effects.  \nThis one took about 5 minutes...\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmod2 <- glmer(Correct ~ Delay*Group +\n             (1 + Delay | Subject_ID) +\n             (1 + Delay + Group | Test_word),\n             family=binomial, data=tel)\n```\n:::\n\n\n<p style=\"color:red;font-size:.8em\">\nWarning message:<br>\nIn checkConv(attr(opt, \"derivs\"), opt\\$par, ctrl = control\\$checkConv,  :<br>\n  Model failed to converge with max|grad| = 0.00887744 (tol = 0.002, component 1)\n</p>\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nVarCorr(mod2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Groups     Name           Std.Dev. Corr         \n Test_word  (Intercept)    1.076941              \n            Delayweek      0.074697 -0.801       \n            GroupStudyTest 0.109342 -0.928  0.966\n Subject_ID (Intercept)    1.589794              \n            Delayweek      0.210633 -0.601       \n```\n\n\n:::\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-26' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-26', 'sol-start-26')\">  3 - Removing Group|Test_word</button></div><div class=\"solution-body\" id = \"sol-body-26\" style=\"display: none;\">\n\n\n\nWe still have a singular fit here. Thinking about the study, if we are going to remove __one__ of the by-testword random effects (`Delay` or `Group`), which one do we consider to be more theoretically justified? Is the effect of Delay likely to vary by test-words? More so than the effect of group is likely to vary by test-words?  \nQuite possibly - it's reasonable to think that some words will be more easily retained over a week than others, but I can't come up with a reason to think why `StudyTest` vs `StudyStudy` would have a different effect for some words than others.  \n\nLet's remove the by-testword random effect of group. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmod3 <- glmer(Correct ~ Delay*Group +\n             (1 + Delay | Subject_ID) +\n             (1 + Delay | Test_word),\n             family=binomial, data=tel)\n```\n:::\n\n\n\nThis one converges! But we still have a correlation of -1.  \nWhy did we not get a warning message?  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nVarCorr(mod3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Groups     Name        Std.Dev. Corr  \n Test_word  (Intercept) 1.027514       \n            Delayweek   0.055424 -1.000\n Subject_ID (Intercept) 1.598967       \n            Delayweek   0.208732 -0.599\n```\n\n\n:::\n:::\n\n\n\nThe `isSingular()` function allows us to check for when a model is close to singularity (i.e. on the boundary of the feasible parameter space):  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nisSingular(mod3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\n\nThis suggests that we're fine! However, note that this function has a tolerance, which is by default set to 1e-4, or 0.0001. Change this to 1e-3, and it indicates a problem.  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nisSingular(mod3, tol=1e-3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n\nSo we're kind of in a grey area that suggests we are close to overfitting here, so it might be worth continuing to simplify.  \n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-27' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-27', 'sol-start-27')\">  4 - Removing Delay|Test_word</button></div><div class=\"solution-body\" id = \"sol-body-27\" style=\"display: none;\">\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmod4 <- glmer(Correct ~ Delay*Group +\n             (1 + Delay | Subject_ID) +\n             (1 | Test_word),\n             family=binomial, data=tel)\n```\n:::\n\n\nEven when we raise the tolerance here, we're still fine:  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nisSingular(mod4, tol=1e-3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\nAnd here's our random effects: \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nVarCorr(mod4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Groups     Name        Std.Dev. Corr  \n Test_word  (Intercept) 0.99805        \n Subject_ID (Intercept) 1.58653        \n            Delayweek   0.19670  -0.521\n```\n\n\n:::\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-28' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-28', 'sol-start-28')\">  5 - Comparisons</button></div><div class=\"solution-body\" id = \"sol-body-28\" style=\"display: none;\">\n\n\n\nIn the process of getting to our final model, we've just fitted quite a few models that didn't converge. We definitely don't want to do anything with these models (i.e. we shouldn't report them or use them in model comparisons etc).  \n\nHowever, it can sometimes be useful to just check how estimates of fixed effects and their standard errors differ across these models. More often than not, this simply provides us with reassurance that the removal of random effects hasn't actually had too much of an impact on anything we're going to conduct inferences on.  \n\nFor instance, in all these models, the fixed effects estimates are all pretty similar, suggesting that they've all found similar estimates of these parameters which have been largely invariant to our refinement of the random effects.  \n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"wnectwgbfo\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#wnectwgbfo table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#wnectwgbfo thead, #wnectwgbfo tbody, #wnectwgbfo tfoot, #wnectwgbfo tr, #wnectwgbfo td, #wnectwgbfo th {\n  border-style: none;\n}\n\n#wnectwgbfo p {\n  margin: 0;\n  padding: 0;\n}\n\n#wnectwgbfo .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#wnectwgbfo .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#wnectwgbfo .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#wnectwgbfo .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#wnectwgbfo .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#wnectwgbfo .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#wnectwgbfo .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#wnectwgbfo .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#wnectwgbfo .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#wnectwgbfo .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#wnectwgbfo .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#wnectwgbfo .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#wnectwgbfo .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#wnectwgbfo .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#wnectwgbfo .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#wnectwgbfo .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#wnectwgbfo .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#wnectwgbfo .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#wnectwgbfo .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wnectwgbfo .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#wnectwgbfo .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#wnectwgbfo .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#wnectwgbfo .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wnectwgbfo .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#wnectwgbfo .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#wnectwgbfo .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#wnectwgbfo .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wnectwgbfo .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#wnectwgbfo .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#wnectwgbfo .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#wnectwgbfo .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#wnectwgbfo .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#wnectwgbfo .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wnectwgbfo .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#wnectwgbfo .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wnectwgbfo .gt_left {\n  text-align: left;\n}\n\n#wnectwgbfo .gt_center {\n  text-align: center;\n}\n\n#wnectwgbfo .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#wnectwgbfo .gt_font_normal {\n  font-weight: normal;\n}\n\n#wnectwgbfo .gt_font_bold {\n  font-weight: bold;\n}\n\n#wnectwgbfo .gt_font_italic {\n  font-style: italic;\n}\n\n#wnectwgbfo .gt_super {\n  font-size: 65%;\n}\n\n#wnectwgbfo .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#wnectwgbfo .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#wnectwgbfo .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#wnectwgbfo .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#wnectwgbfo .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#wnectwgbfo .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#wnectwgbfo .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#wnectwgbfo .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#wnectwgbfo div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"term\">term</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"mod1\">mod1</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"mod2\">mod2</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"mod3\">mod3</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"mod4\">mod4</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">(Intercept)</td>\n<td headers=\"mod1\" class=\"gt_row gt_right\">1.275 (0.332)</td>\n<td headers=\"mod2\" class=\"gt_row gt_right\">1.283 (0.331)</td>\n<td headers=\"mod3\" class=\"gt_row gt_right\">1.267 (0.332)</td>\n<td headers=\"mod4\" class=\"gt_row gt_right\">1.257 (0.329)</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">Delayweek</td>\n<td headers=\"mod1\" class=\"gt_row gt_right\">-1.065 (0.071)</td>\n<td headers=\"mod2\" class=\"gt_row gt_right\">-1.071 (0.071)</td>\n<td headers=\"mod3\" class=\"gt_row gt_right\">-1.057 (0.07)</td>\n<td headers=\"mod4\" class=\"gt_row gt_right\">-1.047 (0.068)</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">GroupStudyTest</td>\n<td headers=\"mod1\" class=\"gt_row gt_right\">-0.415 (0.456)</td>\n<td headers=\"mod2\" class=\"gt_row gt_right\">-0.429 (0.454)</td>\n<td headers=\"mod3\" class=\"gt_row gt_right\">-0.401 (0.457)</td>\n<td headers=\"mod4\" class=\"gt_row gt_right\">-0.398 (0.453)</td></tr>\n    <tr><td headers=\"term\" class=\"gt_row gt_left\">Delayweek:GroupStudyTest</td>\n<td headers=\"mod1\" class=\"gt_row gt_right\">0.781 (0.103)</td>\n<td headers=\"mod2\" class=\"gt_row gt_right\">0.795 (0.102)</td>\n<td headers=\"mod3\" class=\"gt_row gt_right\">0.776 (0.101)</td>\n<td headers=\"mod4\" class=\"gt_row gt_right\">0.776 (0.099)</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n \n\n\n\n\n\n<div class='question-begin'>Question 16</div><div class='question-body'>\n\n\nCreate a plot of the predicted probabilities and uncertainty for each of the `Delay * Group` combinations.  \n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div class=\"solution-begin\"><button id='sol-start-29' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-29', 'sol-start-29')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-29\" style=\"display: none;\">\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(effects)\neffplot <- effect(\"Delay:Group\", mod4) |>\n  as.data.frame()\n\nggplot(effplot, aes(Delay, fit, color=Group)) + \n  geom_pointrange(aes(ymax=upper, ymin=lower), \n                  position=position_dodge(width = 0.2))+\n  theme_classic() # just for a change :)\n```\n\n::: {.cell-output-display}\n![](04exDORAIN_files/figure-html/unnamed-chunk-78-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n\n<div class='question-begin'>Question 17</div><div class='question-body'>\n\n\n\nHere are odds ratios for our model:  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\n# cbind combines columns\ncbind(\n  # the odds ratios:\n  OR = exp(fixef(mod4)), \n  # the CIs:\n  exp(confint(mod4, method=\"Wald\", parm=\"beta_\"))\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                OR     2.5 %    97.5 %\n(Intercept)              3.5155077 1.8444914 6.7003803\nDelayweek                0.3510452 0.3075298 0.4007181\nGroupStudyTest           0.6715269 0.2761216 1.6331515\nDelayweek:GroupStudyTest 2.1734992 1.7894502 2.6399723\n```\n\n\n:::\n:::\n\n\n\nWhat should we do with this information? How should we apply test-enhanced learning to learning R and statistics?  \n\n\n</div><p class=\"question-end\"></p>\n\n \n\n\n<div class=\"solution-begin\"><button id='sol-start-30' class=\"jk-circle-right solution-icon clickable\" onclick=\"toggle_visibility('sol-body-30', 'sol-start-30')\">  Solution </button></div><div class=\"solution-body\" id = \"sol-body-30\" style=\"display: none;\">\n\n\nWe'll get the benefits of test-enhanced learning if we try these exercises before looking at any of the solutions that are visible! If we don't test ourselves, we're more likely to forget it in the long run.  \n\n\n</div><p class=\"solution-end\"></p>\n\n \n",
    "supporting": [
      "04exDORAIN_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/panelset-0.3.0/panelset.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/panelset-0.3.0/panelset.js\"></script>\n<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}